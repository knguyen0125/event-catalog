openapi: 3.0.3
info:
  title: Property Manager Gateway
  description: |
    # Property Manager Gateway

    Property Manager Gateway is a [Backend For
    Frontend](https://learn.microsoft.com/en-us/azure/architecture/patterns/backends-for-frontends)
    targeting Property Manager (primary user) of our application.
  version: 0.1.0
  contact:
    email: kien.nguyen@your.rentals
    name: Kien Nguyen
servers:
  - url: 'https://localhost:8080'
    description: Local
  - url: 'https://property-manager-gateway-dev.your.rentals'
    description: Development
  - url: 'https://property-manager-gateway.your.rentals'
    description: Production
security:
  - bearerAuth: []
tags:
  - name: Account
  - name: Authentication
  - name: Booking
  - name: Booking Request
  - name: Manual Booking
  - name: Offer
  - name: Conversation
  - name: Conversation Message
  - name: Extra Service Definition
  - name: Extra Service Order
  - name: Listing
  - name: Listing Snooze
  - name: Move Listing
  - name: Listing Channel Content
  - name: Local Authority Connection
  - name: Local Authority Connection Association
  - name: Message Template
  - name: Organization
  - name: Sales Partner
  - name: Sales Partner Terms
  - name: User
  - name: Inquiry
  - name: Booking Quote
  - name: Offer Quote
  - name: Push Notification Channel
paths:
  /listings/{listingId}/offer-quote:
    post:
      operationId: getListingOfferQuote
      summary: Get Listing Offer Quote
      description: Get Listing Offer Quote
      externalDocs:
        url: https://yourrentals.atlassian.net/wiki/spaces/YA/pages/3475767454/RFC+-+Booking+Pricing+Streamline
      tags:
        - Offer Quote
      parameters:
        - $ref: '#/components/parameters/listing-id.v1'
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/quote-payload.v1'
                - type: object
                  required:
                    - totalGuestPaymentInPmCurrency
                  properties:
                    totalGuestPaymentInPmCurrency:
                      type: number
                      format: float
                      description:
                        Total Guest Payment amount, in PM currency (must be
                        greater than listing's cleaning fee)
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                required:
                  - ratePlanId
                  - cancellationPolicyId
                  - priceSummary
                  - priceBreakdown
                properties:
                  ratePlanId:
                    type: string
                    description: ID of the rate plan
                  cancellationPolicyId:
                    $ref: '#/components/schemas/cancellation-policy.v1'
                  priceSummary:
                    $ref: '#/components/schemas/quote-breakdown-item-price.v1'
                  priceBreakdown:
                    type: array
                    items:
                      $ref: '#/components/schemas/quote-breakdown-item-price.full.v1'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                oneOf:
                  - description: Requested booking period is not available
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                oneOf:
                  - description: Listing not found
                  - description: Rate plan not found
  /listings/{listingId}/rate-plans/{ratePlanId}/quote:
    post:
      operationId: getListingRatePlanQuote
      summary: Get Listing Rate Plan Quote
      description: Get Listing Rate Plan Quote
      externalDocs:
        url: https://yourrentals.atlassian.net/wiki/spaces/YA/pages/3475767454/RFC+-+Booking+Pricing+Streamline
      tags:
        - Booking Quote
      parameters:
        - $ref: '#/components/parameters/listing-id.v1'
        - in: path
          name: ratePlanId
          required: true
          description:
            Rate Plan ID, or `base` or `best` to quote the base or best rate
            plan
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/quote-payload.v1'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                required:
                  - ratePlanId
                  - cancellationPolicyId
                  - priceSummary
                  - priceBreakdown
                properties:
                  ratePlanId:
                    type: string
                    description: ID of the rate plan
                  cancellationPolicyId:
                    $ref: '#/components/schemas/cancellation-policy.v1'
                  priceSummary:
                    $ref: '#/components/schemas/quote-breakdown-item-price.v1'
                  priceBreakdown:
                    type: array
                    items:
                      allOf:
                        - type: object
                          required:
                            - type
                            - displayOrder
                            - metadata
                          properties:
                            type:
                              type: string
                              description: |
                                Type of the price breakdown item

                                | Display Order | Type | Description |
                                | - | - | - |
                                | 1 | TOTAL_DAILY_RATE_V1 | Nightly rate total |
                                | 2 | DAILY_RATE_DISCOUNT | Daily Rate Discount amount |
                                | 3 | BOOKING_BOOST_DISCOUNT | Booking boost discount |
                                | 4 | CLEANING_FEE | Cleaning fee |
                                | 5 | EXTRA_V1 | Extra V1 orders (per item) |
                                | 6 | EXTRA_V2 | Extra V2 orders (per order) |
                                | 7 | BOOKING_BOOST_FEE_CREDIT_ADJUSTMENT | Booking boost fee credit adjustment |
                                | 8 | MANUAL_ADJUSTMENT | Adjustment |
                              enum:
                                - TOTAL_DAILY_RATE_V1
                                - DAILY_RATE_DISCOUNT
                                - BOOKING_BOOST_DISCOUNT
                                - CLEANING_FEE
                                - BOOKING_BOOST_FEE_CREDIT_ADJUSTMENT
                                - EXTRA_V1
                                - EXTRA_V2
                                - MANUAL_ADJUSTMENT
                            displayOrder:
                              type: integer
                              description:
                                Display order of the price breakdown item (refer
                                to type)
                            metadata:
                              type: object
                              additionalProperties:
                                type: string
                        - $ref: '#/components/schemas/quote-breakdown-item-price.v1'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                oneOf:
                  - description: Requested booking period is not available
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                oneOf:
                  - description: Listing not found
                  - description: Rate plan not found
  /listings/{listingId}/change-account:
    post:
      operationId: moveListingToNewAccount
      tags:
        - Move Listing
      summary: Move listing to new account
      description: Move listing to new account
      parameters:
        - $ref: '#/components/parameters/listing-id.v1'
        - in: query
          name: dryRun
          description:
            When true, only check whether listing can be moved to another
            account without actually moving it
          schema:
            type: boolean
            example: true
            default: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - accountId
              properties:
                accountId:
                  type: string
                  description: ID of the account to move the listing to
                  example: 12345678-1234-1234-1234-123456789012
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  isSuccessful:
                    type: boolean
                    example: true
                    enum:
                      - true
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  isSuccessful:
                    type: boolean
                    example: false
                    enum:
                      - false
                  reason:
                    type: string
                    description: Reason why the listing cannot be moved
                    example:
                      The listing cannot be moved because it already has offers.
                    enum:
                      - The listing cannot be moved because it already has
                        offers.
                      - The listing cannot be moved because it already has
                        bookings.
                      - The listing cannot be moved because it has pending
                        payouts.
  /listings/{listingId}/sales-partner-terms:
    get:
      tags:
        - Sales Partner Terms
      operationId: getListingSalesPartnerTerms
      summary: Get sales partner terms for a listing
      description: |
        Get sales partner terms for a listing
      parameters:
        - $ref: '#/components/parameters/listing-id.v1'
        - in: query
          name: lang
          description:
            Language code for the sales partner term description. If omitted,
            English is returned.
          schema:
            type: string
            default: en
            enum:
              - en
              - es
              - de
              - fr
              - it
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      description: Term ID
                      example: AIRB-1
                    salesPartnerId:
                      type: string
                      description: Sales Partner ID
                      example: AIRB
                    isAccepted:
                      type: boolean
                      description: Whether the term is accepted
                      example: true
                    salesPartnerLogoUrl:
                      type: string
                      description: The url for sales partner's logo
                      example: https://your.rentals/AIRB.jpg
                    description:
                      type: string
                      description: Term description in Markdown format
                      example: >-
                        # I agree to the terms and conditions of the sales
                        partner AIRB
  /listings/{listingId}/sales-partner-terms/batch-accept:
    post:
      tags:
        - Sales Partner Terms
      operationId: batchAcceptListingSalesPartnerTerms
      summary: Batch Accept Listing Sales Partner Terms
      description: |
        Batch Accept Listing Sales Partner Terms
      parameters:
        - $ref: '#/components/parameters/listing-id.v1'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - termIds
              properties:
                termIds:
                  type: array
                  items:
                    type: string
                    example: AIRB-1
                  minItems: 1
      responses:
        '200':
          description: OK
  /accounts/{accountId}/sales-partner-terms/batch-accept:
    post:
      tags:
        - Sales Partner Terms
      operationId: batchAcceptAccountSalesPartnerTerms
      summary: Batch Accept Account Sales Partner Terms
      description: |
        Batch Accept Account Sales Partner Terms
      parameters:
        - $ref: '#/components/parameters/account-id.v1'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - termIds
              properties:
                termIds:
                  type: array
                  items:
                    type: string
                    example: AIRB-1
                  minItems: 1
      responses:
        '200':
          description: OK
  /auth/oidc/token:
    post:
      tags:
        - Authentication
      summary: Get token
      security: []
      description: |
        Get access token to use in other API calls. 
        Include the `access_token` in the `Authorization` 
        header of other API calls with the `Bearer` scheme.
      operationId: getToken
      requestBody:
        content:
          application/json:
            examples:
              password:
                value:
                  grant_type: password
                  username: admin
                  password: admin
              google:
                value:
                  grant_type: 'custom:google'
                  id_token: '1234567890'
              facebook:
                value:
                  grant_type: 'custom:facebook'
                  id_token: '1234567890'
              refresh_token:
                value:
                  grant_type: refresh_token
                  refresh_token: '1234567890'
            schema:
              type: object
              required:
                - grant_type
              properties:
                grant_type:
                  type: string
                  description: |
                    The grant type to use. The value must be one of the following:

                    - `password`: Get a token using username and password.
                    - `custom:google`: Get a token using a Google ID token.
                    - `custom:facebook`: Get a token using a Facebook ID token.
                    - `refresh_token`: Get a new token using a refresh token.
                    - `custom:otp`: Get a token using OTP code.
                  enum:
                    - password
                    - 'custom:google'
                    - 'custom:facebook'
                    - 'custom:otp'
                    - refresh_token
                  example: password
                username:
                  type: string
                  description: |
                    The username of the user to authenticate. 

                    Only required when `grant_type` is `password`. 
                    If `grant_type` is not `password`, this field is forbidden.
                  example: admin
                password:
                  type: string
                  description: |
                    The password of the user to authenticate. 

                    Only required when `grant_type` is `password`. 
                    If `grant_type` is not `password`, this field is forbidden.
                  example: admin
                id_token:
                  type: string
                  description: |
                    The id token of the user to authenticate using social login.

                    Only required when `grant_type` is `custom:google` or `custom:facebook`. 
                    If `grant_type` is not `custom:google` or `custom:facebook`, this field is forbidden.
                refresh_token:
                  type: string
                  description: |
                    The refresh token to use to get a new access token.

                    Only required when `grant_type` is `refresh_token`. 
                    If `grant_type` is not `refresh_token`, this field is forbidden.
                  example: '1234567890'
                mfa_key:
                  type: string
                  description:
                    'Key provided when MFA is required. Only required when
                    `grant_type` is `custom:otp`'
                mfa_code:
                  type: string
                  description:
                    'OTP sent to Email/SMS, or generated from TOTP application
                    (Google Authenticator, etc.)'
                remember_me:
                  type: boolean
                  description: Not required when `grant_type` is `refresh_token`
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/authentication-response.full.v1'
        '401':
          $ref: '#/components/responses/401.error.v1'
        '403':
          description: MFA required
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    description: The HTTP status code
                    example: 403
                  mfa_key:
                    type: string
                    description:
                      'Key provided when MFA is required. Only required when
                      `grant_type` is `custom:otp`'
  /auth/reset-password/initiate:
    post:
      tags:
        - Authentication
      summary: Request password reset
      security: []
      description: |
        Request a password reset for specified email.

        For security reasons, this endpoint does not return any information about
        whether the email address exists in the system or not. If the email address
        does not exist, or if the account does not use username/password
        authentication, the endpoint will still return a 200 response.
      operationId: initiateResetPassword
      requestBody:
        content:
          application/json:
            examples:
              email:
                value:
                  email: admin@example.com
            schema:
              type: object
              required:
                - email
              properties:
                email:
                  type: string
                  description: |
                    Email address to send password reset link to
                  example: admin@example.com
      responses:
        '200':
          description: OK
  /auth/reset-password/validate-token:
    post:
      tags:
        - Authentication
      summary: Validate password reset token
      security: []
      description: |
        Validate a password reset token.
      operationId: validateResetPasswordToken
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - resetPasswordToken
              properties:
                resetPasswordToken:
                  type: string
                  description: |
                    Token received from email sent by Initiate Reset Password endpoint
                  example: abcdef
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  valid:
                    type: boolean
                    description: |
                      Whether the token is valid
                    example: true
  /auth/reset-password/complete:
    post:
      tags:
        - Authentication
      summary: Reset Password
      security: []
      description: |
        Perform a password reset.
      operationId: resetPassword
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - resetPasswordToken
                - password
              properties:
                resetPasswordToken:
                  type: string
                  description: |
                    Token received from email sent by Initiate Reset Password endpoint
                  example: abcdef
                password:
                  type: string
                  description: |
                    New password
                  example: abcdef
                language:
                  type: string
                  description: |
                    2-letter language code to use for email
                  example: EN
      responses:
        '200':
          description: OK
  /auth/otp/send:
    post:
      tags:
        - Authentication
      summary: Send OTP
      security: []
      description: |
        Request an OTP to device(Email,phone)
      operationId: sendOtp
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - mfa_key
                - requestMethod
              properties:
                mfa_key:
                  type: string
                  description: |
                    UserId
                requestMethod:
                  type: string
                  description: |
                    Method using to verify Otp code
                  enum:
                    - email
                    - phone
      responses:
        '200':
          description: OK(In the case mfa_key is invalid still response 200)
  '/listings/{listingId}/bookings/search':
    post:
      tags:
        - Booking
      summary: Search bookings in one listing
      description: |
        Search bookings in one listing
      operationId: searchBookingsInListing
      parameters:
        - $ref: '#/components/parameters/listing-id.v1'
        - $ref: '#/components/parameters/pagination.cursor.v1'
        - $ref: '#/components/parameters/pagination.limit.v1'
        - name: _sort
          in: query
          description: |
            The sort order. The value must be one of the following:
            - `to:asc`
            - `to:desc`
            - `createdAt:asc`
            - `createdAt:desc`
            - `updatedAt:asc`
            - `updatedAt:desc`
          required: false
          schema:
            type: string
            example: 'to:asc'
        - name: toStart
          in: query
          description:
            'The start of filtering involving the `to` field. Only valid when
            `_sort` is `to:asc` or `to:desc`. The format should be unix
            timestamp in seconds.'
          required: false
          schema:
            type: string
            example: '1677206229'
        - name: toEnd
          in: query
          description:
            'The end of filtering involving the `to` field. Only valid when
            `_sort` is `to:asc` or `to:desc`. The format should be unix
            timestamp in seconds.'
          required: false
          schema:
            type: string
            example: '1677206229'
        - name: createdAtStart
          in: query
          description:
            'The start of filtering involving the `createdAt` field. Only valid
            when `_sort` is `createdAt:asc` or `createdAt:desc`. The format
            should be unix timestamp in seconds.'
          required: false
          schema:
            type: string
            example: '1677206229'
        - name: createdAtEnd
          in: query
          description:
            'The end of filtering involving the `createdAt` field. Only valid
            when `_sort` is `createdAt:asc` or `createdAt:desc`. The format
            should be unix timestamp in seconds.'
          required: false
          schema:
            type: string
            example: '1677206229'
        - name: updatedAtStart
          in: query
          description:
            'The start of filtering involving the `updatedAt` field. Only valid
            when `_sort` is `updatedAt:asc` or `updatedAt:desc`. The format
            should be unix timestamp in seconds.'
          required: false
          schema:
            type: string
            example: '1677206229'
        - name: updatedAtEnd
          in: query
          description:
            'The end of filtering involving the `updatedAt` field. Only valid
            when `_sort` is `updatedAt:asc` or `updatedAt:desc`. The format
            should be unix timestamp in seconds.'
          required: false
          schema:
            type: string
            example: '1677206229'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                bookingId:
                  type: string
                  description: |
                    The booking ID to search. Omit to search all bookings. It is case-insensitive.
                  example: ABCDEF
                guestName:
                  type: string
                  description: |
                    The guest name to search. Omit to search all bookings. It is case-insensitive.
                  example: John Doe
                statuses:
                  type: array
                  description: |
                    The booking statuses to search. Omit to search all statuses.
                  items:
                    type: string
                    enum:
                      - expired
                      - declined
                      - pendingPayment
                      - pendingConfirm
                      - confirmed
                      - inProgress
                      - coolOff
                      - completed
                      - disputeByPm
                      - disputeByGuest
                      - cancelled
                      - cancelledByPm
                      - cancelledByGuest
                      - cancelledByYR
                      - pendingCancellation
                      - pendingCancellationGuest
                    example: confirmed
                types:
                  type: array
                  description: |
                    The booking types to search. Omit to search all types.
                  items:
                    type: string
                    enum:
                      - Automatic
                      - Manual
                      - Sync
                      - System
                      - Snooze
                    example: Automatic
                salesChannels:
                  type: array
                  description: |
                    The booking sales channel IDs to search. Omit to search all sales channels.
                  items:
                    type: string
                    example: AIRB
                createdAt:
                  type: object
                  description: |
                    The start and end (inclusive) of filtering involving the `createdAt` field.
                  required:
                    - start
                    - end
                  properties:
                    start:
                      type: string
                      format: unix timestamp in seconds
                      example: '1677206229'
                    end:
                      type: string
                      format: unix timestamp in seconds
                      example: '1677206229'
                from:
                  type: object
                  description: |
                    The start and end (inclusive) of filtering involving the `from` field (Check-in date).
                  required:
                    - start
                    - end
                  properties:
                    start:
                      type: string
                      format: unix timestamp in seconds
                      example: '1677206229'
                    end:
                      type: string
                      format: unix timestamp in seconds
                      example: '1677206229'
                to:
                  type: object
                  description: |
                    The start and end (inclusive) of filtering involving the `to` field (Check-out date).
                  required:
                    - start
                    - end
                  properties:
                    start:
                      type: string
                      format: unix timestamp in seconds
                      example: '1677206229'
                    end:
                      type: string
                      format: unix timestamp in seconds
                      example: '1677206229'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/paginated-response.v1'
                  - type: object
                    properties:
                      results:
                        type: array
                        items:
                          $ref: '#/components/schemas/booking.full.v1'
        '401':
          $ref: '#/components/responses/401.error.v1'
        '403':
          $ref: '#/components/responses/403.error.v1'
  '/accounts/{accountId}/bookings/search':
    post:
      tags:
        - Booking
      summary: Search bookings in one account
      description: |
        Search bookings in one account
      operationId: searchBookingsInAccount
      parameters:
        - $ref: '#/components/parameters/account-id.v1'
        - $ref: '#/components/parameters/pagination.cursor.v1'
        - $ref: '#/components/parameters/pagination.limit.v1'
        - name: _sort
          in: query
          description: |
            The sort order. The value must be one of the following:
            - `to:asc`
            - `to:desc`
            - `createdAt:asc`
            - `createdAt:desc`
            - `updatedAt:asc`
            - `updatedAt:desc`
          required: false
          schema:
            type: string
            example: 'to:asc'
        - name: toStart
          in: query
          description:
            'The start of filtering involving the `to` field. Only valid when
            `_sort` is `to:asc` or `to:desc`. The format should be unix
            timestamp in seconds.'
          required: false
          schema:
            type: string
            example: '1677206229'
        - name: toEnd
          in: query
          description:
            'The end of filtering involving the `to` field. Only valid when
            `_sort` is `to:asc` or `to:desc`. The format should be unix
            timestamp in seconds.'
          required: false
          schema:
            type: string
            example: '1677206229'
        - name: createdAtStart
          in: query
          description:
            'The start of filtering involving the `createdAt` field. Only valid
            when `_sort` is `createdAt:asc` or `createdAt:desc`. The format
            should be unix timestamp in seconds.'
          required: false
          schema:
            type: string
            example: '1677206229'
        - name: createdAtEnd
          in: query
          description:
            'The end of filtering involving the `createdAt` field. Only valid
            when `_sort` is `createdAt:asc` or `createdAt:desc`. The format
            should be unix timestamp in seconds.'
          required: false
          schema:
            type: string
            example: '1677206229'
        - name: updatedAtStart
          in: query
          description:
            'The start of filtering involving the `updatedAt` field. Only valid
            when `_sort` is `updatedAt:asc` or `updatedAt:desc`. The format
            should be unix timestamp in seconds.'
          required: false
          schema:
            type: string
            example: '1677206229'
        - name: updatedAtEnd
          in: query
          description:
            'The end of filtering involving the `updatedAt` field. Only valid
            when `_sort` is `updatedAt:asc` or `updatedAt:desc`. The format
            should be unix timestamp in seconds.'
          required: false
          schema:
            type: string
            example: '1677206229'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                listingIds:
                  type: array
                  description: |
                    The listing IDs to search. Omit to search all listings.
                  items:
                    type: number
                    example: 123456
                bookingId:
                  type: string
                  description: |
                    The booking ID to search. Omit to search all bookings. It is case-insensitive.
                  example: ABCDEF
                guestName:
                  type: string
                  description: |
                    The guest name to search. Omit to search all bookings. It is case-insensitive.
                  example: John Doe
                statuses:
                  type: array
                  description: |
                    The booking statuses to search. Omit to search all statuses.
                  items:
                    type: string
                    enum:
                      - expired
                      - declined
                      - pendingPayment
                      - pendingConfirm
                      - confirmed
                      - inProgress
                      - coolOff
                      - completed
                      - disputeByPm
                      - disputeByGuest
                      - cancelled
                      - cancelledByPm
                      - cancelledByGuest
                      - cancelledByYR
                      - pendingCancellation
                      - pendingCancellationGuest
                    example: confirmed
                types:
                  type: array
                  description: |
                    The booking types to search. Omit to search all types.
                  items:
                    type: string
                    enum:
                      - Automatic
                      - Manual
                      - Sync
                      - System
                      - Snooze
                    example: Automatic
                salesChannels:
                  type: array
                  description: |
                    The booking sales channel IDs to search. Omit to search all sales channels.
                  items:
                    type: string
                    example: AIRB
                createdAt:
                  type: object
                  description: |
                    The start and end (inclusive) of filtering involving the `createdAt` field.
                  required:
                    - start
                    - end
                  properties:
                    start:
                      type: string
                      format: unix timestamp in seconds
                      example: '1677206229'
                    end:
                      type: string
                      format: unix timestamp in seconds
                      example: '1677206229'
                from:
                  type: object
                  description: |
                    The start and end (inclusive) of filtering involving the `from` field (Check-in date).
                  required:
                    - start
                    - end
                  properties:
                    start:
                      type: string
                      format: unix timestamp in seconds
                      example: '1677206229'
                    end:
                      type: string
                      format: unix timestamp in seconds
                      example: '1677206229'
                to:
                  type: object
                  description: |
                    The start and end (inclusive) of filtering involving the `to` field (Check-out date).
                  required:
                    - start
                    - end
                  properties:
                    start:
                      type: string
                      format: unix timestamp in seconds
                      example: '1677206229'
                    end:
                      type: string
                      format: unix timestamp in seconds
                      example: '1677206229'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/paginated-response.v1'
                  - type: object
                    properties:
                      results:
                        type: array
                        items:
                          $ref: '#/components/schemas/booking.full.v1'
        '401':
          $ref: '#/components/responses/401.error.v1'
        '403':
          $ref: '#/components/responses/403.error.v1'
  '/bookings/{bookingId}':
    get:
      tags:
        - Booking
      summary: Get booking
      description: |
        Get booking by ID
      operationId: getBooking
      parameters:
        - $ref: '#/components/parameters/booking-id.v1'
        - in: query
          name: withPricingBreakdown
          description: |
            If `true`, Automatic bookings will return `pricingBreakdown` property.
          schema:
            type: boolean
            default: false
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/booking.full.v1'
                  - title: Automatic booking with pricing breakdown.
                    description:
                      Only returned when `withBookingPricingBreakdown` is true.
                    allOf:
                      - $ref: '#/components/schemas/booking.metadata.v1'
                      - $ref: '#/components/schemas/booking.partial.v1'
                      - $ref: '#/components/schemas/booking.partial.automatic.v1'
                      - type: object
                        properties:
                          pricingBreakdown:
                            description: Pricing breakdown
                            type: array
                            items:
                              $ref: '#/components/schemas/quote-breakdown-item-price.full.v1'
        '401':
          $ref: '#/components/responses/401.error.v1'
        '403':
          $ref: '#/components/responses/403.error.v1'
  '/bookings/{bookingId}/request-cancel':
    post:
      tags:
        - Booking
      summary: Request to cancel a booking
      description: |
        Request to cancel a booking
      operationId: requestCancelBooking
      parameters:
        - $ref: '#/components/parameters/booking-id.v1'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - reason
                - message
              properties:
                reason:
                  type: string
                  enum:
                    - The property is already booked for these dates
                    - The price of the booking is incorrect
                    - There is an issue with the property itself
                    - This booking does not meet our rules
                    - Other reason
                  description: Reason for cancellation
                message:
                  type: string
                  minLength: 40
                  maxLength: 1024
                  exclusiveMinimum: false
                  exclusiveMaximum: false
                  description: Message to Guest
      responses:
        '200':
          description: OK
        '400':
          description: Booking was not in a cancellable state
        '404':
          description: Booking not found
  '/bookings/{bookingId}/confirm-request':
    post:
      tags:
        - Booking Request
      summary: Confirm a booking request
      description: Confirm a booking request
      operationId: confirmRequestBooking
      parameters:
        - $ref: '#/components/parameters/booking-id.v1'
      responses:
        '200':
          description: OK
  '/bookings/{bookingId}/decline-request':
    post:
      tags:
        - Booking Request
      summary: Decline a booking request
      description: Decline a booking request
      operationId: declineRequestBooking
      parameters:
        - $ref: '#/components/parameters/booking-id.v1'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - reason
                - message
              properties:
                reason:
                  type: string
                  enum:
                    - The guest has too many people for this property
                    - There is a problem with the guest
                    - There is an issues with the price quoted
                    - The property is not available due to other reasons
                    - The property is already booked
                    - Other reason
                  description: |
                    Reason for declining

                    If reason is one of `The property is not available due to other reasons`
                    , `The property is already booked`, or `Other reason`, the property will be blocked for those dates
                message:
                  type: string
                  minLength: 100
                  maxLength: 300
                  exclusiveMinimum: false
                  exclusiveMaximum: false
                  description: Message to Guest
      responses:
        '200':
          description: OK
  '/bookings/{bookingId}/resend-check-in-instructions':
    post:
      tags:
        - Booking
      summary: Resend check-in instructions
      description: |
        Resend check-in instructions to guest
      operationId: resendCheckInInstructions
      parameters:
        - $ref: '#/components/parameters/booking-id.v1'
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - instructions
              properties:
                instructions:
                  type: string
                  description: Check-in instruction to be sent to guest
                  maxLength: 3000
                  exclusiveMaximum: false
                attachments:
                  type: array
                  description: |
                    Files to be sent to guest. The maximum number of files is 6, and maximum size of each file is 10MB.

                    Only the following file types are allowed: `image/png`, `image/jpeg`, `image/jpg`, `application/pdf`.
                  items:
                    type: string
                    format: binary
                  maxItems: 6
                  exclusiveMaximum: false
                includeOriginalInstructionAttachments:
                  type: boolean
                  description: |
                    Whether to include the original instruction attachments in the email.
                  default: false
            encoding:
              attachments:
                contentType: 'image/png, image/jpeg, image/jpg, application/pdf'
      responses:
        '200':
          description: OK
  '/accounts/{accountId}/listings/search':
    post:
      tags:
        - Listing
      summary: Search for listings in an account
      description: |
        Search for listings in an account
      operationId: searchListingsInAccount
      parameters:
        - $ref: '#/components/parameters/account-id.v1'
        - $ref: '#/components/parameters/pagination.cursor.v1'
        - $ref: '#/components/parameters/pagination.limit.v1'
        - name: _sort
          in: query
          description: |
            The sort order. The value must be one of the following:

            - `frontendListOrder:asc`
            - `frontendListOrder:desc`
            - `createdAt:asc`
            - `createdAt:desc`
            - `updatedAt:asc`
            - `updatedAt:desc`

            The `frontendListOrder:asc` is recommended for sorting in frontend, 
            which brings the listings that require attention to the top.
          schema:
            type: string
            example: 'frontendListOrder:asc'
        - name: createdAtStart
          in: query
          description:
            'The start of filtering involving the `createdAt` field. Only valid
            when `_sort` is `createdAt:asc` or `createdAt:desc`. The format
            should be unix timestamp in seconds.'
          required: false
          schema:
            type: string
            example: '1677206229'
        - name: createdAtEnd
          in: query
          description:
            'The end of filtering involving the `createdAt` field. Only valid
            when `_sort` is `createdAt:asc` or `createdAt:desc`. The format
            should be unix timestamp in seconds.'
          required: false
          schema:
            type: string
            example: '1677206229'
        - name: updatedAtStart
          in: query
          description:
            'The start of filtering involving the `updatedAt` field. Only valid
            when `_sort` is `updatedAt:asc` or `updatedAt:desc`. The format
            should be unix timestamp in seconds.'
          required: false
          schema:
            type: string
            example: '1677206229'
        - name: updatedAtEnd
          in: query
          description:
            'The end of filtering involving the `updatedAt` field. Only valid
            when `_sort` is `updatedAt:asc` or `updatedAt:desc`. The format
            should be unix timestamp in seconds.'
          required: false
          schema:
            type: string
            example: '1677206229'
        - schema:
            type: array
            items:
              type: string
          in: query
          name: _fields
          description: List of fields to return
        - schema:
            type: boolean
          in: query
          name: getAll
          description: Return all data and ignore _limit
        - name: lang
          in: query
          schema:
            type: string
            enum:
              - en
              - es
              - fr
              - it
              - de
              - pt
          description: Current language of account. Default value `en`
        - name: checkForSnooze
          in: query
          schema:
            type: boolean
            description: Whether to check for listing snooze status
            default: false
      requestBody:
        description: The search criteria
        content:
          application/json:
            schema:
              type: object
              properties:
                listingIds:
                  type: array
                  description:
                    'The listing IDs to search. Omit to search all listings. If
                    the listings do not belong to the account, they will be
                    ignored.'
                  items:
                    type: number
                    example: 123456
                statuses:
                  type: array
                  description: |
                    The listing statuses to search. Omit to search all statuses.

                    For frontend purpose, it's recommended to search for all statuses except `deactivated`.
                  items:
                    type: string
                    enum:
                      - draft
                      - listed
                      - unlisted
                      - deactivated
                      - paused
                    example: deactivated
                excludedListingIds:
                  type: array
                  description: |
                    The listing IDs to exclude from the search. If the listings
                    do not belong to the account, they will be ignored.
                  items:
                    type: number
                    example: 123456
                countryISOs:
                  type: array
                  description: |
                    The country ISOs to search. Omit to search all countries.
                  items:
                    type: string
                    example: SG
                rentalTypes:
                  type: array
                  description: |
                    The rental types to search. Omit to search all rental types.
                  items:
                    type: string
                    enum:
                      - Holiday house
                      - Apartment
                      - Guest room
                      - Boat
                      - Bungalow
                      - Holiday park
                      - B&B
                      - Mobile home
                      - Villa
                      - Castle
                      - Cabin
                      - Chalet
                      - Condo
                      - Farmhouse
                      - House
                      - Lodge
                      - Studio
                    example: Holiday house
                bookingModels:
                  type: array
                  description: |
                    The booking models to search. Omit to search all booking
                    models.
                  items:
                    type: string
                    enum:
                      - instant
                      - onRequest
                    example: instant
                hasNoReportableSeller:
                  type: boolean
                  description: |
                    If true, only returns listings that have no reportable seller
                reportableSellerIds:
                  type: array
                  description: |
                    The reportable seller IDs to search. Omit to search all
                    reportable sellers.

                    If `hasNoReportableSeller` is true, this field is forbidden.
                  items:
                    type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/paginated-response.v1'
                  - type: object
                    properties:
                      results:
                        type: array
                        items:
                          $ref: '#/components/schemas/listing.full.v1'
        '401':
          $ref: '#/components/responses/401.error.v1'
        '403':
          $ref: '#/components/responses/403.error.v1'
  '/listings/{listingId}/manual-bookings':
    post:
      operationId: createManualBooking
      summary: Create a manual booking
      description: Create a manual booking
      tags:
        - Manual Booking
      parameters:
        - $ref: '#/components/parameters/listing-id.v1'
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/booking.partial.v1'
                - $ref: '#/components/schemas/booking.partial.manual.v1'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  bookingId:
                    type: string
                    description: The ID of the created manual booking
  '/manual-bookings/{bookingId}':
    put:
      operationId: updateManualBooking
      summary: Update a manual booking
      description: Update a manual booking
      tags:
        - Manual Booking
      parameters:
        - $ref: '#/components/parameters/booking-id.v1'
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/booking.partial.v1'
                - $ref: '#/components/schemas/booking.partial.manual.v1'
      responses:
        '200':
          description: OK
    delete:
      operationId: removeManualBooking
      summary: Remove a manual booking
      description: Remove a manual booking
      tags:
        - Manual Booking
      parameters:
        - $ref: '#/components/parameters/booking-id.v1'
      responses:
        '200':
          description: OK
  '/listings/{listingId}/offers':
    post:
      operationId: createOfferWithListing
      summary: Create an offer with listing ID
      description: Create an offer with listing ID
      tags:
        - Offer
      parameters:
        - $ref: '#/components/parameters/listing-id.v1'
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/offer.partial.v1'
                - type: object
                  properties:
                    inquiryMessageId:
                      type: string
                      description: |
                        If provided, the offer will be created as a reply to the inquiry message. Sales channel of the offer
                        will also be updated to match that of the inquiry message.
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/offer.full.v1'
  '/offers/{offerId}':
    get:
      operationId: getOffer
      summary: Get an offer
      description: Get an offer
      tags:
        - Offer
      parameters:
        - $ref: '#/components/parameters/offer-id.v1'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/offer.full.v1'
    put:
      operationId: updateOffer
      summary: Update an offer
      description: Update an offer
      tags:
        - Offer
      parameters:
        - $ref: '#/components/parameters/offer-id.v1'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/offer.partial.v1'
      responses:
        '200':
          description: OK
    delete:
      operationId: removeOffer
      summary: Remove an offer
      description: Remove an offer
      tags:
        - Offer
      parameters:
        - $ref: '#/components/parameters/offer-id.v1'
      responses:
        '200':
          description: OK
  '/listings/{listingId}':
    get:
      tags:
        - Listing
      summary: Get listing
      description: |
        Get listing
      operationId: getListing
      parameters:
        - $ref: '#/components/parameters/listing-id.v1'
        - name: includeDeactivated
          in: query
          description: |
            By default, listings that are `deactivated` will not included in the
            response and will cause a 404 error.

            Set this parameter to `true` to include `deactivated` listings in the
            response.
          required: false
          schema:
            type: boolean
            example: false
            default: false
        - name: lang
          in: query
          schema:
            type: string
            enum:
              - en
              - es
              - fr
              - it
              - de
              - pt
          description: Current language of account. Default value `en`
        - name: checkForSnooze
          in: query
          schema:
            type: boolean
            description: Whether to check for listing snooze status
            default: false
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/listing.full.v1'
        '401':
          $ref: '#/components/responses/401.error.v1'
        '403':
          $ref: '#/components/responses/403.error.v1'
  '/listings/{listingId}/snoozes':
    post:
      tags:
        - Listing Snooze
      summary: Create a snooze booking
      description: |

        Create a snooze booking
      operationId: snoozeListing
      parameters:
        - $ref: '#/components/parameters/listing-id.v1'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - from
                - to
              properties:
                from:
                  type: string
                  format: date
                  description: Snooze booking from date
                  example: '2020-01-01'
                to:
                  type: string
                  format: date
                  description: Snooze booking to date
                  example: '2020-01-02'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    description: snooze id (booking id)
        '401':
          $ref: '#/components/responses/401.error.v1'
        '403':
          $ref: '#/components/responses/403.error.v1'
  '/listings/{listingId}/deactivate':
    post:
      tags:
        - Listing
      summary: Deactivate a listing
      description: |
        Deactivate a listing
      operationId: deactivateListing
      parameters:
        - $ref: '#/components/parameters/listing-id.v1'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - reason
              properties:
                reason:
                  type: string
                  enum:
                    - noLongerRenting
                    - propertySold
                    - noContract
                    - tooComplicated
                    - disengaged
                    - other
                  description: |
                    Reason for deactivate listing: 
                    - `noLongerRenting`: I am not renting this property any longer
                    - `propertySold`: I have sold this property
                    - `noContract`: I have not renewed the contract for this property
                    - `tooComplicated`: Your.Rentals is too complicated to use
                    - `disengaged`: I do not want to use Your.Rentals any longer
                    - `other`: I have other reasons
                message:
                  type: string
                  maxLength: 600
                  exclusiveMaximum: false
                  description: Deactivation reason message
      responses:
        '200':
          description: OK
  '/snoozes/{snoozeId}':
    delete:
      tags:
        - Listing Snooze
      summary: Delete snooze
      description: |
        Delete snooze
      operationId: deleteSnooze
      parameters:
        - $ref: '#/components/parameters/snooze-id.v1'
      responses:
        '200':
          description: OK
  '/listings/{listingId}/unlist':
    post:
      tags:
        - Listing
      summary: Unlist listing
      description: |
        Unlist listing
      operationId: unlistListing
      parameters:
        - $ref: '#/components/parameters/listing-id.v1'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - reason
              properties:
                reason:
                  type: string
                  enum:
                    - other
                    - disengaged
                    - noBookings
                    - fullyBooked
                    - tooComplicated
                    - noLongerRenting
                    - noRatesNextYear
                  description: |
                    Reason for unlist listingId:
                    - `fullyBooked`: I am fully booked at the moment 
                    - `noRatesNextYear`: I don't have rates yet for next year
                    - `noBookings`: I don't receive any bookings from Your.Rentals
                    - `noLongerRenting`: I am not renting this property any longer
                    - `tooComplicated`: Your.Rentals is too complicated to use
                    - `disengaged`: I do not want to use Your.Rentals any longer
                    - `other`: I have other reasons
                message:
                  type: string
                  maxLength: 600
                  exclusiveMaximum: false
                  description: 'Message for support team, basically'
      responses:
        '200':
          description: OK
  '/listings/{listingId}/publish':
    post:
      tags:
        - Listing
      summary: Publish listing
      description: |
        ![Not Implemented](https://img.shields.io/badge/Status-Not%20Implemented-red)

        Publish listing
      operationId: publishListing
      parameters:
        - $ref: '#/components/parameters/listing-id.v1'
      responses:
        '200':
          description: OK
  /sales-partners/search:
    post:
      tags:
        - Sales Partner
      summary: Search for sales partners
      description: |
        ![Not Implemented](https://img.shields.io/badge/Status-Not%20Implemented-red)

        Search for sales partners
      operationId: searchSalesPartners
      parameters:
        - $ref: '#/components/parameters/pagination.cursor.v1'
        - $ref: '#/components/parameters/pagination.limit.v1'
      requestBody:
        description: The search criteria
        content:
          application/json:
            schema:
              type: object
              properties:
                includeChannelManagers:
                  type: boolean
                  description: |
                    Whether to include channel managers in the search results.
                  example: false
                  default: false
                statuses:
                  type: array
                  description: |
                    The sales partner statuses to search. Omit to search all statuses.

                    **Note**: Channel Managers don't have statuses
                  items:
                    type: string
                    enum:
                      - live
                      - hidden
                      - notContracted
                      - disabled
                      - comingSoon
                    example: live
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/paginated-response.v1'
                  - type: object
                    properties:
                      results:
                        type: array
                        items:
                          $ref: '#/components/schemas/sales-partner.full.v1'
        '401':
          $ref: '#/components/responses/401.error.v1'
        '403':
          $ref: '#/components/responses/403.error.v1'
  /organizations:
    get:
      tags:
        - Organization
      summary: Get organizations
      description: |
        ![Not Implemented](https://img.shields.io/badge/Status-Not%20Implemented-red)

        Get organizations that the current user has access to.
      operationId: getOrganizations
      parameters:
        - $ref: '#/components/parameters/pagination.cursor.v1'
        - $ref: '#/components/parameters/pagination.limit.v1'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/paginated-response.v1'
                  - type: object
                    properties:
                      results:
                        type: array
                        items:
                          $ref: '#/components/schemas/organization.full.v1'
        '401':
          $ref: '#/components/responses/401.error.v1'
        '403':
          $ref: '#/components/responses/403.error.v1'
  '/organizations/{organizationId}/accounts':
    get:
      tags:
        - Account
      summary: Get accounts
      description: |
        ![Not Implemented](https://img.shields.io/badge/Status-Not%20Implemented-red)

        Get accounts that current user has access to within this organization
      operationId: getAccounts
      parameters:
        - $ref: '#/components/parameters/organization-id.v1'
        - $ref: '#/components/parameters/pagination.cursor.v1'
        - $ref: '#/components/parameters/pagination.limit.v1'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/paginated-response.v1'
                  - type: object
                    properties:
                      results:
                        type: array
                        items:
                          $ref: '#/components/schemas/account.full.v1'
        '401':
          $ref: '#/components/responses/401.error.v1'
        '403':
          $ref: '#/components/responses/403.error.v1'
  '/accounts/{accountId}/inquiries/{inquiryId}/accept-request-to-book':
    parameters:
      - schema:
          type: string
        name: accountId
        in: path
        required: true
        description: Account ID
      - schema:
          type: string
        name: inquiryId
        in: path
        required: true
        description: Inquiry ID
    post:
      summary: Accept a request to book inquiry
      operationId: acceptRequestToBookInquiry
      responses:
        '200':
          description: OK
        '400':
          description: Bad request exception
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    description: The HTTP status code
                  message:
                    type: string
                    description: The error message
              examples:
                Inquiry is not of type request to book:
                  value:
                    statusCode: 400
                    message: Inquiry is not of type request to book
                Inquiry has expired and cannot be accepted:
                  value:
                    statusCode: 400
                    message: Inquiry has expired and cannot be accepted
        '401':
          $ref: '#/components/responses/401.error.v1'
        '403':
          $ref: '#/components/responses/403.error.v1'
      description: Accept a request to book inquiry
      tags:
        - Inquiry
  '/accounts/{accountId}/inquiries/{inquiryId}/decline-request-to-book':
    parameters:
      - schema:
          type: string
        name: accountId
        in: path
        required: true
        description: Account ID
      - schema:
          type: string
        name: inquiryId
        in: path
        required: true
        description: Inquiry ID
    post:
      summary: Decline a request to book inquiry
      operationId: declineRequestToBookInquiry
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                required:
                  - reason
                properties:
                  reason:
                    type: string
                    description: |-
                      Reason of the decline request:
                      | Value | Description |
                      | - | - |
                      | DATES_NOT_AVAILABLE | The requested dates are not available |
                      | POLICY_DONT_FIT_NEEDS | House rules or policies don't match the guest's needs |
                      | OUTSIDE_HOURS_CHECKIN | The request's check-in time does not suit my availability |
                      | MISSING_INFORMATION | Trip or account details are in-complete |
                      | NOT_COMFORTABLE | I'm not comfortable accepting this request |
                    enum:
                      - DATES_NOT_AVAILABLE
                      - POLICY_DONT_FIT_NEEDS
                      - OUTSIDE_HOURS_CHECKIN
                      - MISSING_INFORMATION
                      - NOT_COMFORTABLE
                  notes:
                    type: string
                    description:
                      Notes for PM's reason. Required if the reason is
                      NOT_COMFORTABLE
              examples:
                Normal reason cases:
                  value:
                    reason: DATES_NOT_AVAILABLE
                Not comfortable case:
                  value:
                    reason: NOT_COMFORTABLE
                    notes: I'm going to schedule a maintenance on this house
        '400':
          description: Bad request exception
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    description: The HTTP status code
                  message:
                    type: string
                    description: The error message
              examples:
                Inquiry is not of type request to book:
                  value:
                    statusCode: 400
                    message: Inquiry is not of type request to book
                Inquiry has expired and cannot be declined:
                  value:
                    statusCode: 400
                    message: Inquiry has expired and cannot be declined
      description: Decline a request to book inquiry
      tags:
        - Inquiry V2
  '/sale-channels/{saleChannelId}/channel-content-categories':
    get:
      deprecated: true
      tags:
        - Listing Channel Content
      summary: Get listing channel categories for sale channel
      description:
        Get all root channel categories (must have parent key is `null`) for
        sale channel. Response can be attach completion percentage of listing
        when query params has `includeCompletionPercentage` and `listingId`.
      operationId: getListingChannelCategories
      parameters:
        - $ref: '#/components/parameters/sale-channel-id.v1'
        - $ref: '#/components/parameters/listing-id-query.v1'
        - name: includeCompletionPercentage
          in: query
          description:
            'Define the response include completionPercentage. The listingId is
            required when this field is `true`, otherwise listingId is
            forbidden.'
          required: false
          schema:
            type: boolean
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/category.v1'
        '401':
          $ref: '#/components/responses/401.error.v1'
        '403':
          $ref: '#/components/responses/403.error.v1'

  '/sale-channels/{saleChannelId}/categories/search':
    post:
      tags:
        - Listing Channel Content
      summary: Search listing channel categories for sale channel
      description:
        Search channel categories for sale channel. Response can be attach
        completion percentage of listing when query params has
        `includeCompletionPercentage` and `listingId`.
      operationId: searchListingChannelCategories
      parameters:
        - $ref: '#/components/parameters/pagination.cursor.v1'
        - $ref: '#/components/parameters/pagination.limit.v1'
        - $ref: '#/components/parameters/pagination.sort.v1'
        - $ref: '#/components/parameters/sale-channel-id.v1'
        - $ref: '#/components/parameters/listing-id-query.v1'
        - name: includeCompletionPercentage
          in: query
          description:
            'Define the response include completionPercentage. The listingId is
            required when this field is `true`, otherwise listingId is
            forbidden.'
          required: false
          schema:
            type: boolean
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                parentKey:
                  type: string
                  nullable: true
                  description: Search category by parent key
                  example: 'FACILITIES_SERVICES'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/paginated-response.v1'
                  - type: object
                    properties:
                      results:
                        type: array
                        items:
                          $ref: '#/components/schemas/category.v1'
                    required:
                      - results
              examples:
                Root - parent key is null (tab name):
                  value:
                    pagination:
                      nextCursor: 'base64'
                    results:
                      - key: PROPERTY
                        labelTranslationKey: BOCM_PROPERTY
                        saleChannelId: BOCM
                        parentKey: null
                        order: 1
                      - key: POLICIES
                        labelTranslationKey: BOCM_POLICIES
                        saleChannelId: BOCM
                        parentKey: null
                        order: 3
                Level 2 - parent key is PROPERTY (tab detailed):
                  value:
                    pagination:
                      nextCursor: 'base64'
                    results:
                      - key: FACILITIES_SERVICES
                        labelTranslationKey: BOCM_FACILITIES_SERVICES
                        saleChannelId: BOCM
                        parentKey: PROPERTY
                        order: 10
                        summaryTranslationKey: BOCM_FACILITIES_SERVICES
                        showSearchBar: true
                        searchBarPlaceholderTranslationKey: BOCM_SEARCH_FACILITIES_PLACEHOLDER
                        completionPercentage: 0.3114
                      - key: SUSTAINABILITY_PRACTICES
                        labelTranslationKey: BOCM_SUSTAINABILITY_PRACTICES
                        saleChannelId: BOCM
                        parentKey: PROPERTY
                        order: 2
                        summaryTranslationKey: BOCM_SUSTAINABILITY_PRACTICES_SUMMARY
                        descriptionTranslationKey: BOCM_SUSTAINABILITY_PRACTICES_DESCRIPTION
                        completionPercentage: 0.7325
                Level 3 - parent key is FACILITIES_SERVICES (section):
                  value:
                    pagination:
                      nextCursor: 'base64'
                    results:
                      - key: TOP_FACILITIES
                        labelTranslationKey: BOCM_TOP_FACILITIES
                        parentKey: FACILITIES_SERVICES
                        saleChannelId: BOCM
                        order: 1001
                      - key: PRICE_FOR_MEALS
                        labelTranslationKey: BOCM_PRICE_FOR_MEALS
                        parentKey: FACILITIES_SERVICES
                        saleChannelId: BOCM
                        order: 1002
        '401':
          $ref: '#/components/responses/401.error.v1'
        '403':
          $ref: '#/components/responses/403.error.v1'
  '/sale-channels/{saleChannelId}/channel-content-categories/{rootCategoryKey}/channel-content-definitions':
    get:
      tags:
        - Listing Channel Content
      summary: Get listing channel content definitions by root category key
      description:
        Get all active listing channel content definitions (isEnabled = true) by
        root category key. Can be associate with channel content settings for
        listing id.
      operationId: getListingChannelContentDefinitions
      parameters:
        - $ref: '#/components/parameters/sale-channel-id.v1'
        - name: rootCategoryKey
          in: path
          description: The root category key. Case insensitive
          required: true
          schema:
            type: string
            example: facilities_services
        - name: includeContentSettings
          in: query
          description:
            'Define the response include contentSettings. The listingId is
            required when this field is `true`, otherwise listingId is
            forbidden.'
          required: false
          schema:
            type: boolean
        - name: listingId
          in: query
          description: The Listing ID
          required: false
          schema:
            type: integer
            minimum: 1
            example: 12345
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      format: uuid
                      example: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                    key:
                      type: string
                      description:
                        Unique Identifier for Channel Content Definition. The
                        combination of salesChannelId and key must be unique
                      example: PARKING
                    labelTranslationKey:
                      type: string
                      description: For i18n translation
                      example: BOCM_PARKING
                    descriptionTranslationKey:
                      type: string
                      description:
                        'Description under definition label, for i18n
                        translation'
                      nullable: true
                      example: BOCM_PARKING_DESCRIPTION
                    saleChannelId:
                      type: string
                      description:
                        Sales Channel ID. The combination of salesChannelId and
                        key must be unique
                      example: BOCM
                      minLength: 4
                      maxLength: 4
                    order:
                      type: number
                      minimum: 1
                      format: integer
                      description: UI display definition order
                    categoryKey:
                      type: string
                      description: Primary key of the category table
                      example: TRANSPORT
                    category:
                      type: object
                      description:
                        Detail of category. Find by `categoryKey` and
                        `saleChannelId`.
                      properties:
                        key:
                          type: string
                          description: Category key for gateway mapping
                          example: TRANSPORT
                        labelTranslationKey:
                          type: string
                          description: For i18n translation
                          example: BOCM_TRANSPORT
                        saleChannelId:
                          type: string
                          example: BOCM
                          minLength: 4
                          maxLength: 4
                        parentKey:
                          type: string
                          nullable: true
                          description:
                            Linked with parent category. Root category has
                            parent key is null.
                          example: FACILITIES_SERVICES
                        order:
                          type: number
                          description: UI display order
                          minimum: 1
                        showAdditionalInformation:
                          type: boolean
                          description:
                            Additional information for each section. Display in
                            the in the blue information icon
                          nullable: true
                        additionalInformationLabelTranslationKey:
                          type: string
                          description:
                            For i18n translation. Valid when
                            showAdditionalInformation is true
                          example: BOCM_WHY_IS_THIS_IMPORTANT
                          nullable: true
                        additionalInformationDescriptionTranslationKey:
                          type: string
                          description:
                            For i18n translation. Valid when
                            showAdditionalInformation is true
                          example: BOCM_REDUCING_WASTE_IS_A_GREAT_WAY
                          nullable: true
                        showCaption:
                          type: boolean
                          description:
                            Show caption for a section before display group
                            definition items
                          nullable: true
                        captionLabelTranslationKey:
                          type: string
                          description:
                            For i18n translation. Valid when showCaption is true
                          example: BOCM_HAVE_YOU_IMPLEMENTED_ANY_OF_THESE_PRACTICES_TO_REDUCE_WASTE
                          nullable: true
                    isEnabled:
                      type: boolean
                      default: true
                      description:
                        This attribute specifies the hidden/shown on the channel
                        manager page.
                    validationSchema:
                      type: object
                      nullable: true
                      description:
                        Using JSON schema for validate. Null if channel content
                        definition have no form.
                    formItems:
                      type: array
                      nullable: true
                      description:
                        Define all fields for this form. Null if channel content
                        definition have no form.
                      items:
                        type: object
                        properties:
                          id:
                            type: string
                            format: uuid
                            example: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                          key:
                            type: string
                            description: Form key for gateway mapping
                            example: PARKING_NAME
                          labelTranslationKey:
                            type: string
                            description: Form label for i18n translation
                            example: BOCM_PARKING_NAME
                          showLabelInSummarySidebar:
                            type: boolean
                            nullable: true
                            description:
                              'If true, we show summary as `Label: Form value`.
                              Else we show `Form value` only in the summary
                              sidebar'
                          order:
                            type: number
                            description: UI display form item order
                            format: integer
                            minimum: 1
                          inputType:
                            type: string
                            enum:
                              - currency
                              - component-group
                              - select
                              - text-input
                              - number-input
                              - chip
                              - button-group
                              - radio
                              - text-area
                              - file-input
                          isMultiple:
                            type: boolean
                            description: 'When true, display field as an array'
                            nullable: true
                          summaryTemplate:
                            type: string
                            description:
                              'This field will display representing for current
                              form group. Accept variable in the template.
                              Variable getting from path of the form value and
                              define in the {{variable}}. Example:
                              {{formValue.PARKING_NAME}},
                              {{formValue.PARKING_RATE.AMOUNT}}. If form value
                              in an array, we also have some special template
                              key called “specialTemplateKey.INDEX_FROM_0” and
                              “specialTemplateKey.INDEX_FROM_1”'
                            example:
                              '{{formValue.PARKING_NAME}} -
                              {{“specialTemplateKey.INDEX_FROM_1}}'
                            nullable: true
                          addButtonTranslationKey:
                            type: string
                            description:
                              'When multiple is true, define add button key for
                              i18n translation'
                            example: BOCM_ADD_PARKING_TIME
                            nullable: true
                          removeButtonTranslationKey:
                            type: string
                            description:
                              'When multiple is true, define remove button key
                              for i18n translation'
                            example: BOCM_REMOVE_PARKING_TIME
                            nullable: true
                          options:
                            type: object
                            description: Options for component props
                            properties:
                              defaultValue:
                                description: Default value for this form item.
                                example: EUR
                              placeholderTranslationKey:
                                type: string
                                nullable: true
                                description:
                                  I18n translation key. Using for input type is
                                  one of `select` `number-input` `text-input`
                                  ...
                                example: PLACEHOLDER_PARKING_NAME
                              styles:
                                type: object
                                nullable: true
                                description: Css styles inline for form item.
                                example:
                                  width: 300px
                              summaryTemplateStyles:
                                type: object
                                nullable: true
                                description:
                                  Css styles inline for summary template. Valid
                                  when multiple is true and have summary
                                  template.
                                example:
                                  width: 350px
                              items:
                                type: array
                                description:
                                  Data for menu items. Valid when input type is
                                  one of `select` `chip` `button-group` `radio`
                                items:
                                  type: object
                                  properties:
                                    value:
                                      type: string
                                      description:
                                        Select item value. For gateway mapping
                                      example: INDOOR_PARKING
                                    labelTranslationKey:
                                      type: string
                                      description: For i18n translation
                                      example: BOCM_INDOOR_PARKING
                                  required:
                                    - value
                                    - labelTranslationKey
                              groupItems:
                                type: array
                                description:
                                  Group form items. Valid when inputType is
                                  `component-group`
                                items:
                                  type: object
                                example:
                                  - key: CURRENCY
                                    labelTranslationKey: BOCM_CURRENCY
                                    order: 1
                                    inputType: currency
                                    options:
                                      defaultValue: EUR
                                    createdAt: '2019-08-24T14:15:22Z'
                                    updatedAt: '2019-08-24T14:15:22Z'
                                  - key: AMOUNT
                                    labelTranslationKey: BOCM_AMOUNT
                                    order: 2
                                    inputType: number-input
                                    options:
                                      placeholderTranslationKey: BOCM_PARKING_AMOUNT
                                    createdAt: '2019-08-24T14:15:22Z'
                                    updatedAt: '2019-08-24T14:15:22Z'
                          visibility:
                            type: object
                            description:
                              Check the visibility of this form item when other
                              form item key - value is valid
                            nullable: true
                            properties:
                              schema:
                                type: object
                                description:
                                  Using JSON schema for check visibility
                              then:
                                type: string
                                description:
                                  'When validation of schema.test is valid,
                                  trigger then behavior'
                                enum:
                                  - show
                                  - hide
                                  - enable
                                  - disable
                              otherwise:
                                type: string
                                description:
                                  'When validation of schema.test is invalid,
                                  trigger otherwise behavior'
                                enum:
                                  - hide
                                  - show
                                  - disable
                                  - enable
                          createdAt:
                            type: string
                            format: date-time
                          updatedAt:
                            type: string
                            format: date-time
                        required:
                          - id
                          - key
                          - labelTranslationKey
                          - order
                          - inputType
                    contentSettings:
                      type: array
                      nullable: true
                      description:
                        Merged from all channel content settings value.
                      items:
                        allOf:
                          - $ref: '#/components/schemas/channel-setting-form-value.v1'
                          - type: object
                            properties:
                              id:
                                type: string
                                format: uuid
                              listingId:
                                type: number
                                format: integer
                                example: 12345
                                minimum: 1
                              accountId:
                                type: string
                                format: uuid
                              createdAt:
                                type: string
                                format: date-time
                              updatedAt:
                                type: string
                                format: date-time
                            required:
                              - id
                              - listingId
                              - accountId
                      example:
                        - id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                          contentDefinitionId: ff7bf553-e2e4-4dfd-b9f0-e188d4620a10
                          listingId: 12345
                          accountId: 3d07c219-0a88-45be-9cfc-91e9d095a1e9
                          isEnabled: true
                          order: 1
                          formValue:
                            PARKING_NAME: Parking 1
                            PARKING_TYPE: INDOOR_PARKING
                            PAID_PARKING: 'YES'
                            PARKING_RATE:
                              CURRENCY: SEK
                              AMOUNT: 300
                              TYPE: PER_DAY
                            VALET_SERVICE_AVAILABLE: 'YES'
                          createdAt: '2019-08-24T14:15:22Z'
                          updatedAt: '2019-08-24T14:15:22Z'
                        - id: 497f6eca-6276-4993-bfeb-53cbbbba6f09
                          contentDefinitionId: ff7bf553-e2e4-4dfd-b9f0-e188d4620a11
                          listingId: 12345
                          accountId: 3d07c219-0a88-45be-9cfc-91e9d095a1e9
                          isEnabled: true
                          order: 2
                          formValue:
                            PARKING_NAME: Parking 2
                            PARKING_TYPE: OUTDOOR_PARKING
                            PAID_PARKING: 'NO'
                            VALET_SERVICE_AVAILABLE: 'NO'
                          createdAt: '2019-08-24T14:15:22Z'
                          updatedAt: '2019-08-24T14:15:22Z'
                  required:
                    - id
                    - key
                    - labelTranslationKey
                    - saleChannelId
                    - order
                    - category
                    - isEnabled
        '401':
          $ref: '#/components/responses/401.error.v1'
        '403':
          $ref: '#/components/responses/403.error.v1'
  '/listings/{listingId}/channel-content-settings/batch-update':
    post:
      summary: Batch update channel content settings
      tags:
        - Listing Channel Content
      operationId: postChannelContentSettingsBatchUpdate
      responses:
        '201':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  allOf:
                    - $ref: '#/components/schemas/channel-setting-form-value.v1'
                    - type: object
                      properties:
                        id:
                          type: string
                          format: uuid
                        listingId:
                          type: number
                          format: integer
                          example: 12345
                          minimum: 1
                        accountId:
                          type: string
                          format: uuid
                        createdAt:
                          type: string
                          format: date-time
                        updatedAt:
                          type: string
                          format: date-time
                      required:
                        - id
                        - listingId
                        - accountId
              examples:
                Example:
                  value:
                    - id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                      contentDefinitionId: ff7bf553-e2e4-4dfd-b9f0-e188d4620a10
                      listingId: 12345
                      accountId: 3d07c219-0a88-45be-9cfc-91e9d095a1e9
                      isEnabled: true
                      formValue:
                        PARKING_NAME: Parking 1
                        PARKING_TYPE: INDOOR_PARKING
                        PAID_PARKING: 'YES'
                        PARKING_RATE:
                          CURRENCY: SEK
                          AMOUNT: 300
                          TYPE: PER_DAY
                        VALET_SERVICE_AVAILABLE: 'YES'
                      order: 1
                      createdAt: '2019-08-24T14:15:22Z'
                      updatedAt: '2019-08-24T14:15:22Z'
        '401':
          $ref: '#/components/responses/401.error.v1'
        '403':
          $ref: '#/components/responses/403.error.v1'
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/channel-setting-form-value.v1'
            examples:
              Example:
                value:
                  - contentDefinitionId: ff7bf553-e2e4-4dfd-b9f0-e188d4620a10
                    isEnabled: true
                    formValue:
                      PARKING_NAME: Parking 1
                      PARKING_TYPE: INDOOR_PARKING
                      PAID_PARKING: 'YES'
                      PARKING_RATE:
                        CURRENCY: SEK
                        AMOUNT: 300
                        TYPE: PER_DAY
                      VALET_SERVICE_AVAILABLE: 'YES'
                    order: 1
      description: Batch update channel content setting
    parameters:
      - $ref: '#/components/parameters/listing-id.v1'
  '/accounts/{accountId}/local-authority-connections':
    parameters:
      - schema:
          type: string
        name: accountId
        in: path
        required: true
        description: Account ID
    post:
      summary: Add local authority connection
      operationId: addLocalAuthorityConnection
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/local-authority-connection.entity.v1'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
      tags:
        - Local Authority Connection
      description: Add new local authority connection
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/create-local-authority-connection.dto.v1'
  '/accounts/{accountId}/local-authority-connections/{connectionId}':
    parameters:
      - schema:
          type: string
        name: accountId
        in: path
        required: true
        description: Account ID
      - schema:
          type: string
        name: connectionId
        in: path
        required: true
        description: Connection ID
    get:
      summary: Get Local Authority Connection By ID
      tags:
        - Local Authority Connection
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/local-authority-connection.entity.v1'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      operationId: getLocalAuthorityConnectionById
      description:
        Get local authority connection by id. Return a the connection data if
        there is a connection existed and belong to current account
    put:
      summary: Update Local Authority Connection
      operationId: pmUpdateLocalAuthorityConnection
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      description:
        Update local authority connection. Only allow PM to update the
        connection which is owned by him
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/update-local-authority-connection.dto.v1'
      tags:
        - Local Authority Connection
    delete:
      summary: Delete Local Authority Connection
      operationId: pmDeleteLocalAuthorityConnection
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      tags:
        - Local Authority Connection
      description: |-
        Delete local authority connection:
        - Only allow PM to delete one of his owned connections
        - Pending confirmation requirement: Must remove all listing associations within the given connection
  '/accounts/{accountId}/local-authority-connections/{connectionId}/deactivate':
    parameters:
      - schema:
          type: string
        name: accountId
        in: path
        required: true
        description: Account ID
      - schema:
          type: string
        name: connectionId
        in: path
        required: true
        description: Connection ID
    post:
      summary: Deactivate Local Authority Connection
      operationId: deactivateLocalAuthorityConnection
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      tags:
        - Local Authority Connection
      description:
        Deactivate local authority connection. Only allow PM to deactive one of
        his owned connections
  '/accounts/{accountId}/local-authority-connections/{connectionId}/activate':
    parameters:
      - schema:
          type: string
        name: accountId
        in: path
        required: true
        description: Account ID
      - schema:
          type: string
        name: connectionId
        in: path
        required: true
        description: Connection ID
    post:
      summary: Activate Local Authority Connection
      operationId: activateLocalAuthorityConnection
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      tags:
        - Local Authority Connection
      description:
        Activate local authority connection. Only allow PM to active one of his
        owned connections
  '/accounts/{accountId}/local-authority-connections/search':
    parameters:
      - schema:
          type: string
        name: accountId
        in: path
        required: true
        description: Account ID
    post:
      summary: Search Local Authority Connection
      operationId: searchLocalAuthorityConnections
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/paginated-response.v1'
                  - type: object
                    properties:
                      results:
                        $ref: '#/components/schemas/local-authority-connection.entity.v1'
                    required:
                      - results
        '401':
          description: Unauthorized
      description:
        Search for current account owned local authority connections based on
        given search
      tags:
        - Local Authority Connection
      parameters:
        - $ref: '#/components/parameters/pagination.cursor.v1'
        - $ref: '#/components/parameters/pagination.limit.v1'
        - $ref: '#/components/parameters/pagination.sort.v1'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                types:
                  type: array
                  description: Connection types
                  nullable: true
                  items:
                    type: string
                    enum:
                      - SPANISH_POLICE
                isEnabled:
                  type: boolean
                  description: Connection enabled
                  nullable: true
        description: ''
  '/accounts/{accountId}/local-authority-connection-associations':
    parameters:
      - schema:
          type: string
        name: accountId
        in: path
        required: true
        description: Account ID
    post:
      summary: Create Local Authority Connection Association
      operationId: createLocalAuthorityConnectionAssociation
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      tags:
        - Local Authority Connection Association
      description: |-
        Associate a listing to local authority connection
        - The connection and listing must be owned by current account
        - Will throw exception if any given connection or listing is invalid or not belong to current account
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                connectionId:
                  type: string
                  format: uuid
                  description: Connection ID
                listingId:
                  type: integer
                  description: Listing IDs
                configuration:
                  oneOf:
                    - $ref: '#/components/schemas/local-authority-connection-association-config.spanish.v1'
              required:
                - connectionId
                - listingId
        description: ''
  '/accounts/{accountId}/local-authority-connection-associations/batch-disassociate':
    parameters:
      - schema:
          type: string
        name: accountId
        in: path
        required: true
        description: Account ID
    post:
      summary: Batch Disassociate Local Authority Connection Association
      operationId: batchDisassociateLocalAuthorityConnectionAssociation
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      tags:
        - Local Authority Connection Association
      description: |-
        Batch Disassociate a list of listings to use local authority connection
        - The connection and listings must be owned by current account
        - Will throw exception if any given connection or listing is invalid or not belong to current account.
        - Will throw exception if any given connection association entry does not exist
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                listingIds:
                  type: array
                  uniqueItems: true
                  minItems: 1
                  description: Listing IDs
                  items:
                    type: integer
                    minimum: 1
              required:
                - listingIds
        description: ''
  '/accounts/{accountId}/local-authority-connection-associations/search':
    parameters:
      - schema:
          type: string
        name: accountId
        in: path
        required: true
        description: Account ID
    post:
      summary: Search Local Authority Connection Association
      operationId: searchLocalAuthorityConnectionAssociations
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/paginated-response.v1'
                  - type: object
                    properties:
                      results:
                        type: array
                        description: Search Result
                        items:
                          type: object
                          properties:
                            listingId:
                              type: number
                              description: 'Listing ID '
                            connectionId:
                              type: string
                              format: uuid
                              description:
                                Connection ID associated with the listing
                            associationToken:
                              type: string
                              description:
                                Association token of the listing which is
                                assigned by the local authority connection
                          required:
                            - listingId
                            - connectionId
                    required:
                      - results
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
      description:
        Search for local authority connection associations which belong to
        current account. Throw error if any given listing id does not belong to
        current account
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                listingIds:
                  type: array
                  description: Listing Ids
                  nullable: true
                  items:
                    type: number
                    minimum: 1
                connectionIds:
                  type: array
                  minItems: 1
                  description: Connection IDs
                  nullable: true
                  items:
                    type: string
                connectionTypes:
                  type: array
                  description: Connection Types
                  nullable: true
                  items:
                    type: string
                    enum:
                      - SPANISH_POLICE
      parameters:
        - $ref: '#/components/parameters/pagination.cursor.v1'
        - $ref: '#/components/parameters/pagination.limit.v1'
        - $ref: '#/components/parameters/pagination.sort.v1'
      tags:
        - Local Authority Connection Association
  '/accounts/{accountId}/conversations/search':
    post:
      tags:
        - Conversation
      summary: Search Conversations
      operationId: searchConversations
      description: Search conversations in one account
      parameters:
        - $ref: '#/components/parameters/account-id.v1'
        - $ref: '#/components/parameters/pagination.limit.v1'
        - $ref: '#/components/parameters/pagination.cursor.v1'
        - name: _sort
          in: query
          description: |
            The sort order. Value must be one of the following:

            - lastActivityAt:asc: Sort by last activity date ascending
            - lastActivityAt:desc: Sort by last activity date descending
            - checkInAt:asc: Sort by check in date ascending
            - checkInAt:desc: Sort by check in date descending

            The `lastActivityAt:desc` is recommended for most cases.
          schema:
            type: string
            enum:
              - 'lastActivityAt:asc'
              - 'lastActivityAt:desc'
              - 'checkInAt:asc'
              - 'checkInAt:desc'
            default: 'lastActivityAt:desc'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                listingIds:
                  type: array
                  description: Listing Ids. Omit to search all conversations
                  nullable: true
                  items:
                    type: number
                    minimum: 1
                bookingId:
                  type: string
                  description:
                    Booking Id. Omit to search all conversations. Case
                    insensitive
                  nullable: true
                guestName:
                  type: string
                  description:
                    Guest name. Omit to search all conversations. Case
                    insensitive
                  nullable: true
                salesChannelIds:
                  type: array
                  description:
                    List of Sales Channels Ids. Omit to search all conversations
                  nullable: true
                  items:
                    type: string
                statuses:
                  type: array
                  description: |
                    List of statuses. Omit to search all conversations

                    - ACTIVE_BOOKINGS: Active bookings
                    - ACTIVE_CONVERSATIONS: Active conversations
                    - ARCHIVED: Archived conversations
                    - BOOKING_INQUIRY: Booking inquiry conversations
                    - CANCELLED_OFFERS: Cancelled offers
                    - CONFIRMED_OFFERS: Confirmed offers
                    - EXPIRED_OFFERS: Expired offers
                    - PENDING_OFFERS: Pending offers
                    - UNREAD_MESSAGES: Unread messages
                  nullable: true
                  items:
                    type: string
                    enum:
                      - ACTIVE_BOOKINGS
                      - ACTIVE_CONVERSATIONS
                      - ARCHIVED
                      - BOOKING_INQUIRY
                      - CANCELLED_OFFERS
                      - CONFIRMED_OFFERS
                      - EXPIRED_OFFERS
                      - PENDING_OFFERS
                      - UNREAD_MESSAGES
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/paginated-response.v1'
                  - type: object
                    properties:
                      results:
                        type: array
                        description: Search Result
                        items:
                          $ref: '#/components/schemas/conversation.v1'
                    required:
                      - results
  '/accounts/{accountId}/message-templates/search':
    post:
      tags:
        - Message Template
      summary: Search Message Templates
      operationId: searchMessageTemplates
      description: Search Message Templates in one account
      parameters:
        - $ref: '#/components/parameters/account-id.v1'
        - $ref: '#/components/parameters/pagination.limit.v1'
        - $ref: '#/components/parameters/pagination.cursor.v1'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                statuses:
                  type: array
                  description: |
                    Statuses of the template. Omit to search all templates

                    - `active`: Active templates
                    - `deleted`: Deleted templates
                  items:
                    type: string
                    nullable: true
                    enum:
                      - active
                      - deleted
                  default:
                    - active
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/paginated-response.v1'
                  - type: object
                    properties:
                      results:
                        type: array
                        description: Search Result
                        items:
                          $ref: '#/components/schemas/message-template.v1'
                    required:
                      - results
  '/accounts/{accountId}/message-templates':
    post:
      tags:
        - Message Template
      summary: Create Message Template
      operationId: createMessageTemplate
      description: Create a Message Template
      parameters:
        - $ref: '#/components/parameters/account-id.v1'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/message-template.v1.partial'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/message-template.v1'
  '/message-templates/{templateId}':
    put:
      tags:
        - Message Template
      summary: Update Message Template
      operationId: updateMessageTemplate
      description: Update a Message Template
      parameters:
        - name: templateId
          in: path
          description: Message Template ID
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/message-template.v1.partial'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/message-template.v1'
    delete:
      tags:
        - Message Template
      summary: Delete Message Template
      operationId: deleteMessageTemplate
      description: Delete a Message Template
      parameters:
        - name: templateId
          in: path
          description: Message Template ID
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
  '/bookings/{bookingId}/conversation':
    get:
      tags:
        - Conversation
      summary: Get conversation by booking ID
      description: |
        Get conversation by booking ID
      operationId: getConversationByBookingId
      parameters:
        - $ref: '#/components/parameters/booking-id.v1'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/conversation.v1'
  '/offers/{offerId}/conversation':
    get:
      tags:
        - Conversation
      summary: Get conversation by offer ID
      description: |
        Get conversation by offer ID
      operationId: getConversationByOfferId
      parameters:
        - name: offerId
          in: path
          description: Offer ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/conversation.v1'
  '/conversations/{conversationId}':
    get:
      tags:
        - Conversation
      summary: Get conversation by ID
      description: |
        Get conversation by ID
      operationId: getConversationById
      parameters:
        - name: conversationId
          in: path
          description: Conversation ID
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/conversation.v1'
  '/conversations/{conversationId}/archive':
    post:
      tags:
        - Conversation
      summary: Archive a conversation
      description: |
        Archive a conversation
      operationId: archiveConversation
      parameters:
        - name: conversationId
          in: path
          description: Conversation ID
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
  '/conversations/{conversationId}/mark-as-read':
    post:
      tags:
        - Conversation
      summary: Mark a conversation as read
      description: |
        Mark a conversation as read
      operationId: markConversationAsRead
      parameters:
        - name: conversationId
          in: path
          description: Conversation ID
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
  '/conversations/{conversationId}/mark-as-unread':
    post:
      tags:
        - Conversation
      summary: Mark a conversation as unread
      description: |
        Mark a conversation as unread
      operationId: markConversationAsUnread
      parameters:
        - name: conversationId
          in: path
          description: Conversation ID
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
  '/conversations/{conversationId}/messages/search':
    post:
      tags:
        - Conversation Message
      summary: Search Conversation Messages
      operationId: searchConversationMessages
      description: Search messages in one conversation
      parameters:
        - name: conversationId
          in: path
          description: Conversation ID
          required: true
          schema:
            type: string
            format: uuid
        - $ref: '#/components/parameters/pagination.limit.v1'
        - $ref: '#/components/parameters/pagination.cursor.v1'
        - name: _sort
          in: query
          description: |
            The sort order. Value must be one of the following:

            - timestamp:asc: Sort by timestamp, ascending
            - timestamp:desc: Sort by timestamp, descending

            The `timestamp:desc` is recommended for most cases, with the rendering order from bottom to top
          schema:
            type: string
            enum:
              - 'timestamp:asc'
              - 'timestamp:desc'
            default: 'timestamp:desc'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/paginated-response.v1'
                  - type: object
                    properties:
                      results:
                        type: array
                        description: Search Result
                        items:
                          $ref: '#/components/schemas/conversation-message.v1'
                    required:
                      - results
  '/conversations/{conversationId}/reply':
    post:
      tags:
        - Conversation Message
      summary: Reply to a Conversation
      description: |
        Reply to a conversation.

        When connected to websocket, listen for the `YR:INBOX_MESSAGE:UPDATE`
        event with the `clientMessageId` the same as `clientMessageId` in the request body.

        When the API returns a successful response, the message should be stored in database.
      operationId: replyToConversation
      parameters:
        - name: conversationId
          in: path
          description: Conversation ID
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                message:
                  type: string
                  description: Message to send
                  nullable: true
                attachments:
                  type: array
                  description: |
                    Attachments to send. The maximum number of attachments is 1.
                  nullable: true
                  items:
                    type: string
                    format: binary
                  maxItems: 1
                  exclusiveMaximum: false
                clientMessageId:
                  type: string
                  description:
                    'An unique ID for message at the client, to receive the
                    message update event'
      responses:
        '200':
          description: OK
  '/extra-management/accounts/{accountId}/extra-service-definitions/search':
    post:
      tags:
        - Extra Service Definition
      summary: Search Extra Service Definition
      description: |
        Search the Extra Service Definittion of the account with certain parameters.
      operationId: searchExtraServiceDefinition
      parameters:
        - name: accountId
          in: path
          description: Account ID
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                listingIds:
                  type: array
                  items:
                    type: number
                  description: |
                    The list of listing ID which Extra Service Definitions are 
                    associated with.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/paginated-response.v1'
                  - type: object
                    properties:
                      results:
                        type: array
                        description: Search Result
                        items:
                          $ref: '#/components/schemas/extra-service-definition.v1'
                    required:
                      - results
  '/extra-management/accounts/{accountId}/extra-service-definitions':
    post:
      tags:
        - Extra Service Definition
      summary: Create Extra Service Definition
      description: |
        Create the Extra Service Definittion for the account.
      operationId: createExtraServiceDefinition
      parameters:
        - name: accountId
          in: path
          description: Account ID
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                accountId:
                  type: string
                  description: The account id that extra definition belongs to.
                  example: accountId
                unitPrice:
                  type: number
                  description: The unit price of extra service definition
                  example: 69
                  minimum: 0
                feeBasis:
                  type: string
                  description: The fee basis of extra definition
                  example: PER_UNIT
                  enum:
                    - FREE
                    - PER_UNIT
                    - PER_UNIT_PER_DAY
                    - PER_DAY
                    - PER_PERSON_PER_WEEK
                    - PER_PERSON_PER_DAY
                    - PER_WEEK
                    - PER_PERSON
                currency:
                  type: string
                  description: The currency of extra service definition
                  example: EUR
                earliestOrderRule:
                  type: string
                  description:
                    The earliest time when extra definition can be ordered
                  example: AT_THE_TIME_BOOKING
                  enum:
                    - AT_THE_TIME_BOOKING
                    - 48H_BEFORE_CHECK_IN
                    - 24H_BEFORE_CHECK_IN
                    - 48H_BEFORE_CHECK_OUt
                    - 24H_BEFORE_CHECK_OUt
                latestOrderRule:
                  type: string
                  description:
                    The latest time when extra definition can be ordered
                  example: NO_RESTRICTION
                  enum:
                    - 48H_BEFORE_CHECK_IN
                    - 24H_BEFORE_CHECK_IN
                    - 48H_BEFORE_CHECK_OUt
                    - 24H_BEFORE_CHECK_OUt
                    - NO_RESTRICTION
                cancellationOrderRule:
                  type: string
                  description:
                    The time rule when extra definition order can be cancelled
                  example: NONE_REFUNDABLE
                  enum:
                    - NONE_REFUNDABLE
                    - ONE_DAY_BEFORE_CHECK_IN
                    - ANY_TIME_BEFORE_CHECK_OUT
                descriptions:
                  type: array
                  description:
                    The list of translated descriptions of extra definition
                  example:
                    - name: Free Coke
                      languageCode: EN
                      descriptions: Descriptions
                    - name: Free Coke ES
                      languageCode: ES
                      descriptions: Descriptions
                  items: {}
                additionalDetails:
                  type: array
                  description:
                    The list of translated additional details of extra
                    definition
                  example:
                    - content: Additional details
                      languageCode: EN
                    - content: Additional details ES
                      languageCode: ES
                  items: {}
                iconUrl:
                  type: string
                  description: The icon of extra definition
                  example: lnr-star
              required:
                - accountId
                - unitPrice
                - feeBasis
                - currency
                - earliestOrderRule
                - latestOrderRule
                - cancellationOrderRule
                - descriptions
                - additionalDetails
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/extra-service-definition.v1'
  '/extra-management/accounts/{accountId}/extra-service-definitions/{extraServiceDefinitionId}':
    parameters:
      - schema:
          type: string
        name: accountId
        in: path
        required: true
        description: Account ID
      - schema:
          type: string
        name: extraServiceDefinitionId
        in: path
        required: true
        description: Extra Service Definition ID
    get:
      summary: Get Extra Service Definition
      tags:
        - Extra Service Definition
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/extra-service-definition.v1'
      operationId: getExtraServiceDefinition
      description: Get Extra Service Definition by ID
    put:
      summary: Update Extra Service Definition
      operationId: updateExtraServiceDefinition
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      tags:
        - Extra Service Definition
      description: PM update an extra service definition
      requestBody:
        content:
          application/json:
            schema:
              type: object
              minProperties: 1
              additionalProperties: false
              properties:
                feeBasis:
                  type: string
                  description: Fee Basis
                unitPrice:
                  type: number
                  minimum: 0
                  maximum: 999999
                  example: 1.05
                  description:
                    Unit price. Must be 0 for free extra with feeBasis = 'FREE'
                currency:
                  type: string
                  example: EUR
                  description: Currency
                earliestOrderRule:
                  type: string
                  description:
                    'Earliest order rule. Must be provide together with latest
                    order rule, providing only one of the two is forbidden'
                  enum:
                    - AT_THE_TIME_BOOKING
                    - 48H_BEFORE_CHECK_IN
                    - 24H_BEFORE_CHECK_IN
                    - 48H_BEFORE_CHECK_OUT
                    - 24H_BEFORE_CHECK_OUT
                  example: 48H_BEFORE_CHECK_OUT
                latestOrderRule:
                  type: string
                  enum:
                    - AT_THE_TIME_BOOKING
                    - 48H_BEFORE_CHECK_IN
                    - 24H_BEFORE_CHECK_IN
                    - 48H_BEFORE_CHECK_OUT
                    - 24H_BEFORE_CHECK_OUT
                  example: 24H_BEFORE_CHECK_OUT
                  description: Latest order rule
                cancellationRule:
                  type: string
                  description: Cancellation Rule
                  enum:
                    - NONE_REFUNDABLE
                    - ONE_DAY_BEFORE_CHECK_IN
                    - ANY_TIME_BEFORE_CHECK_OUT
                additionalDetails:
                  type: array
                  description: Extra additional details
                  nullable: true
                  items:
                    $ref: '#/components/schemas/extra-service-additional-detail'
                descriptions:
                  type: array
                  description: Extra service descriptions
                  nullable: true
                  items:
                    $ref: '#/components/schemas/extra-service-description.v1'
                iconUrl:
                  type: string
                  description: Icon URL
                  example: lnr-star
        description: ''
    delete:
      summary: Delete Extra Service Definition
      operationId: deleteExtraServiceDefinition
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      tags:
        - Extra Service Definition
      description: |-
        PM delete extra service definition
        - Only allow delete extra service definition with correct ownership
  '/extra-management/accounts/{accountId}/extra-service-definitions/{extraServiceDefinitionId}/batch-associate-listings':
    parameters:
      - schema:
          type: string
        name: accountId
        in: path
        required: true
        description: Account ID
      - schema:
          type: string
        name: extraServiceDefinitionId
        in: path
        required: true
        description: Extra Service Definition ID
    post:
      summary: Batch Associate Extra Service Definition To Listings
      operationId: batchAssociateExtraServiceDefinitionListings
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  listingIds:
                    type: array
                    description: Listing IDs
                    minItems: 1
                    items:
                      type: integer
                      example: 344519
                required:
                  - listingIds
      description:
        Batch associate Extra Service Definition to listings. This api will link
        the extra service definition of an account to other listings.
      tags:
        - Extra Service Definition
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                listingIds:
                  type: array
                  example:
                    - 344519
                  description: Listing IDs
                  uniqueItems: true
                  minItems: 1
                  items:
                    type: integer
                    example: 344519
                    minimum: 1
                    exclusiveMinimum: false
              required:
                - listingIds
  '/extra-management/accounts/{accountId}/extra-service-definitions/{extraServiceDefinitionId}/batch-disassociate-listings':
    parameters:
      - schema:
          type: string
        name: accountId
        in: path
        required: true
        description: Account ID
      - schema:
          type: string
        name: extraServiceDefinitionId
        in: path
        required: true
        description: Extra Service Definition ID
    post:
      summary: Batch Disassociate Extra Service Definition From Listings
      operationId: batchDisassociateExtraServiceDefinitionListings
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  listingIds:
                    type: array
                    description: Listing IDs
                    minItems: 1
                    items:
                      type: integer
                      example: 344519
                required:
                  - listingIds
      description:
        Batch disassociate Extra Service Definition to listings. This api will
        unlink the extra service definition from listings.
      tags:
        - Extra Service Definition
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                listingIds:
                  type: array
                  minItems: 1
                  uniqueItems: true
                  description: Listing IDs
                  items:
                    type: integer
                    example: 344519
                    minimum: 1
              required:
                - listingIds
  '/extra-management/accounts/{accountId}/extra-service-orders/search':
    post:
      summary: Search Extra Service Orders
      description: |-
        Search extra service orders by specific conditions:
        - Booking Ids
        - Listing Ids
        - Payment Statuses
      operationId: searchExtraServiceOrders
      parameters:
        - name: accountId
          in: path
          description: Account ID
          required: true
          schema:
            type: string
            format: uuid
        - $ref: '#/components/parameters/pagination.cursor.v1'
        - $ref: '#/components/parameters/pagination.limit.v1'
        - $ref: '#/components/parameters/pagination.sort.v1'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                bookingIds:
                  type: array
                  description: List of booking ids
                  nullable: true
                  items:
                    type: string
                listingIds:
                  type: array
                  description: List of listing ids
                  nullable: true
                  items:
                    type: integer
                    minimum: 1
                paymentStatuses:
                  type: array
                  nullable: true
                  items: {}
      responses:
        '200':
          description: OK
      tags:
        - Extra Service Order
    parameters:
      - schema:
          type: string
        name: accountId
        in: path
        required: true
        description: Account ID
  /extra-management/fee-basis:
    get:
      tags:
        - Extra Service Definition
      summary: Get All Fee Basis
      description: |
        Get all predefined Fee Basis by Your Rentals.
      operationId: getAllFeeBasis
      responses:
        '200':
          description: The configured fee basis of system
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/fee-basis.v1'
      security: []
  '/push-notification-channels':
    post:
      tags:
        - Device Registration
      operationId: addPushNotificationDeviceRegistrationToken
      summary: Add or update a push notification channel
      description: |
        Register a device registration token for a user device

        If the device registration token already exists, its expiration date will be updated (to prevent stale tokens).

        It is recommended to call this endpoint every time the app is opened to ensure the device registration token is up to date.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/push_notification_channel.v1.partial'
      responses:
        '201':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/push_notification_channel.v1.full'
  '/push-notification-channels/publish':
    post:
      tags:
        - Publish Push Notification Channel
      summary: Publish a test notification
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                deviceRegistrationToken:
                  type: string
                  description:
                    The registration token of user's device. If empty then the
                    API will send to all user'devices
                notification:
                  type: object
                  description:
                    Basic notification object to use across all platform
                  properties:
                    title:
                      type: string
                      description: The notification title
                    body:
                      type: string
                      description: The notification body
                    imageUrl:
                      type: string
                      description:
                        Contains the URL of the image to be displayed in the
                        notification.
                data:
                  type: object
                  additionalProperties: true
                  description:
                    An object containing arbitrary data to be sent to the client
                android:
                  type: object
                  description:
                    Android-specific notification options. Refers to
                    `AndroidConfig` in [FCM
                    API](https://firebase.google.com/docs/reference/fcm/rest/v1/projects.messages#androidconfig).
                  additionalProperties: true
                apns:
                  type: object
                  description:
                    Apple Push Notification Service-specific options. Refers to
                    `ApnsConfig` in [FCM
                    API](https://firebase.google.com/docs/reference/fcm/rest/v1/projects.messages#apnsconfig).
                  additionalProperties: true
                webpush:
                  type: object
                  description:
                    Webpush protocol options. Refers to `WebpushConfig` in [FCM
                    API](https://firebase.google.com/docs/reference/fcm/rest/v1/projects.messages#webpushconfig).
                  additionalProperties: true
      responses:
        '201':
          description: OK
        '400':
          description: Bad Request
        '403':
          description:
            Sender ID Mismatch. The sender ID is different from the sender ID
            for the registration token.
        '404':
          description:
            Not Found. Either the user or the device registration token does not
            exist.

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
  schemas:
    authentication-response.full.v1:
      type: object
      required:
        - access_token
        - token_type
        - refresh_token
        - expires_in
        - id_token
      properties:
        access_token:
          type: string
          description: The access token to use for authentication.
          example: '1234567890'
        token_type:
          type: string
          description: 'The type of token. Currently, this is always `Bearer`.'
          example: Bearer
        refresh_token:
          type: string
          description: The refresh token to use to get a new access token.
          example: '1234567890'
        expires_in:
          type: integer
          description: The number of seconds until the access token expires.
          example: 3600
        id_token:
          type: string
          description:
            The id token of the user. Returns an OIDC-compliant JWT token
            containing the user's information.
          example: '123567890'
    paginated-response.v1:
      type: object
      properties:
        pagination:
          type: object
          description: The pagination information.
          properties:
            nextCursor:
              type: string
              nullable: true
              description: |
                The cursor to use to get the next page. If this is `null`, empty, or `''`, there are no more pages.
              example: abcdef
    booking.partial.v1:
      type: object
      description: |
        A booking.
      required:
        - from
        - to
      properties:
        from:
          type: string
          format: date
          description: "Check-in date, in listing's local time"
          example: '2020-01-01'
        to:
          type: string
          format: date
          description: "Check-out date, in listing's local time"
          example: '2020-01-02'
    booking.partial.automatic.v1:
      type: object
      title: Automatic Booking
      description: |
        An automatic booking.
      required:
        - type
        - fromUtc
        - toUtc
        - guest
        - adults
        - salesBrand
        - model
      properties:
        type:
          type: string
          description: Booking type
          enum:
            - Automatic
          example: Automatic
          readOnly: true
        fromUtc:
          type: string
          format: date-time
          description: Check-in date in UTC
          example: '2020-01-01T00:00:00.000Z'
          readOnly: true
        toUtc:
          type: string
          format: date-time
          description: Check-in date in UTC
          example: '2020-01-01T00:00:00.000Z'
          readOnly: true
        adults:
          type: number
          description: Number of adults
          example: 2
          readOnly: true
          minimum: 1
        children:
          type: number
          nullable: true
          description: Number of children
          example: 0
          readOnly: true
        infants:
          type: number
          nullable: true
          description: Number of infants
          example: 0
          readOnly: true
        pets:
          type: number
          nullable: true
          description: Number of pets
          example: 0
          readOnly: true
        childrenAges:
          type: array
          nullable: true
          deprecated: true
          description:
            Ages of children. Length of array must match the number of children.
          items:
            type: number
          example:
            - 2
            - 4
          readOnly: true
        infantsAges:
          type: array
          nullable: true
          deprecated: true
          description:
            Ages of infants. Length of array must match the number of infants.
          items:
            type: number
          example:
            - 1
            - 1
          readOnly: true
        status:
          type: string
          description: Booking status
          enum:
            - expired
            - declined
            - pendingPayment
            - pendingConfirm
            - confirmed
            - inProgress
            - coolOff
            - completed
            - disputeByPm
            - disputeByGuest
            - cancelled
            - cancelledByGuest
            - cancelledByPm
            - cancelledByYR
            - pendingCancellation
            - pendingCancellationGuest
          example: confirmed
          readOnly: true
        salesChannel:
          type: string
          nullable: true
          description: Sales channel ID
          example: AIRB
        salesBrand:
          type: string
          description: Sales brand ID
          example: ABNB
        salesChannelBookingRef:
          type: string
          nullable: true
          description:
            The booking reference (ID) in sales channel. Must be unique per
            sales channel.
          example: ABCDEF
        model:
          type: string
          nullable: true
          description: Booking model
          enum:
            - instant
            - onRequest
          example: instant
        guest:
          type: object
          description: The primary guest's details
          required:
            - id
            - firstName
            - lastName
            - email
            - phone
          properties:
            id:
              type: string
              description: Guest ID
              example: ABCDEF
              readOnly: true
            firstName:
              type: string
              description: Guest first name
              example: John
              readOnly: true
            lastName:
              type: string
              description: Guest last name
              example: Smith
              readOnly: true
            email:
              type: string
              description: Guest email
              example: guest@example.com
            phone:
              type: string
              description: Guest phone number
              example: +1 123 456 7890
              readOnly: true
            address:
              type: string
              nullable: true
              description: Guest address
              example: 123 Main Street
            billingAddress:
              type: string
              nullable: true
              description: Guest billing address
              example: 123 Main Street
            country:
              type: string
              nullable: true
              description:
                Guest country. Must be uppercase ISO 3166-1 alpha-2 code.
              example: US
            language:
              type: string
              nullable: true
              description: Guest language. Must be uppercase ISO 639-1 code.
              example: EN
            postalCode:
              type: string
              nullable: true
              description: Guest postal code
              example: '12345'
            city:
              type: string
              nullable: true
              description: Guest city
              example: New York
        isNonBlocking:
          type: boolean
          nullable: true
          description:
            'If `true`, listing can receive bookings that overlaps this booking
            date. Usually used to "reserve" a listing for an offer.'
          example: false
          readOnly: true
    booking.partial.manual.v1:
      type: object
      title: Manual Booking
      description: |
        An manual booking.
      required:
        - type
        - blockedReason
      properties:
        type:
          type: string
          description: Booking type
          enum:
            - Manual
          example: Manual
          readOnly: true
        reason:
          type: string
          nullable: true
          description: |
            Reason for blocking the booking. 

            If `null`, the reason should be considered as `manual_booking`.

            If `other`, `notes` must be provided.
          enum:
            - closed
            - manual_booking
            - maintenance
            - private_use
            - other
          example: closed
        notes:
          type: string
          nullable: true
          description: |
            Notes for the booking.

            If `reason` is `other`, `notes` must be provided.
          example: This booking was blocked because the property is closed.
        guest:
          type: object
          description: Guest information
          required:
            - firstName
          properties:
            firstName:
              type: string
              description: Guest's first name
              example: John
            lastName:
              type: string
              nullable: true
              description: Guest's last name
              example: Doe
            email:
              type: string
              nullable: true
              format: email
              description: Guest's email
              example: john.doe@example.com
            phone:
              type: string
              nullable: true
              description: Guest's phone
              example: '0123456789'
    booking.partial.sync.v1:
      type: object
      title: Calendar Sync Booking
      description: |
        Booking created by a calendar sync.
      required:
        - type
        - calendarId
      properties:
        type:
          type: string
          description: Booking type
          enum:
            - Sync
          example: Sync
          readOnly: true
        notes:
          type: string
          description:
            Notes for the calendar block. Usually the reason for the block.
          example: Booking notes
        calendarId:
          type: number
          description: Calendar ID
          example: 123456
    booking.partial.system.v1:
      type: object
      title: System-Blocked Booking
      description: |
        Booking created by a system block, usually due to outdated calendar. When a
        listing have this kind of booking, it typically means the listing / account
        has churned
      required:
        - type
        - calendarId
      properties:
        type:
          type: string
          description: Booking type
          enum:
            - System
          example: System
          readOnly: true
    booking.partial.snooze.v1:
      type: object
      title: Snooze Booking
      description: |
        Booking created by an user snooze
      required:
        - type
        - guest
      properties:
        type:
          type: string
          description: Booking type
          enum:
            - Snooze
          example: Snooze
          readOnly: true
        guest:
          type: object
          description:
            Standard guest information. The `firstName` should be `Snooze`
          required:
            - firstName
          properties:
            firstName:
              type: string
              description: Guest's first name
              example: Snooze
    booking.metadata.v1:
      type: object
      description: |
        A booking.
      required:
        - id
        - accountId
        - listingId
        - createdAt
        - updatedAt
      properties:
        id:
          type: string
          description: The booking ID
          example: ABCDEF
          readOnly: true
        accountId:
          type: string
          description: The Account ID
          example: ABCDEF
          readOnly: true
        listingId:
          type: number
          description: The Listing ID
          example: 123456
          readOnly: true
        createdAt:
          type: string
          format: date-time
          description: The date and time the listing was created
          example: '2020-01-01T00:00:00.000Z'
          readOnly: true
        updatedAt:
          type: string
          format: date-time
          description: The date and time the listing was created
          example: '2020-01-01T00:00:00.000Z'
          readOnly: true
    booking.full.v1:
      allOf:
        - $ref: '#/components/schemas/booking.metadata.v1'
        - $ref: '#/components/schemas/booking.partial.v1'
        - oneOf:
            - $ref: '#/components/schemas/booking.partial.automatic.v1'
            - $ref: '#/components/schemas/booking.partial.manual.v1'
            - $ref: '#/components/schemas/booking.partial.sync.v1'
            - $ref: '#/components/schemas/booking.partial.system.v1'
            - $ref: '#/components/schemas/booking.partial.snooze.v1'
          discriminator:
            propertyName: type
            mapping:
              Automatic: '#/components/schemas/booking.partial.automatic.v1'
              Manual: '#/components/schemas/booking.partial.manual.v1'
              Sync: '#/components/schemas/booking.partial.sync.v1'
              System: '#/components/schemas/booking.partial.system.v1'
              Snooze: '#/components/schemas/booking.partial.snooze.v1'
    listing.partial.v1:
      type: object
      description: |
        A listing.
      properties:
        referenceNumber:
          type: string
          description: The listing reference number / Nickname
          example: ABC123
    listing.full.v1:
      allOf:
        - type: object
          description: |
            A listing.
          properties:
            id:
              type: number
              description: The listing id
              example: 12345
              readOnly: true
            createdAt:
              type: string
              format: date-time
              description: The date and time the listing was created
              example: '2020-01-01T00:00:00.000Z'
              readOnly: true
            updatedAt:
              type: string
              format: date-time
              description: The date and time the listing was created
              example: '2020-01-01T00:00:00.000Z'
              readOnly: true
            status:
              type: string
              description: |
                Listing status
                - `draft`: The listing is not yet published. - `listed`: The listing is published and available for booking. - `unlisted`: The listing was published before, but now is not published and not available for booking. - `paused`: The listing is still published, but is not available for booking. - `deactivated`: The listing is removed from the system (soft-delete). For historical purpose, the listing is still kept in the system.
              enum:
                - draft
                - listed
                - unlisted
                - deactivated
                - paused
        - $ref: '#/components/schemas/listing.partial.v1'
        - type: object
          properties:
            calculatedname:
              type: string
              description: Calculated name of listing
              example: iSeaview Nha Trang Beach Apartment - Deluxe Apartment
            images:
              type: array
              description: |
                Precomputed Images: add `url` to item `image` of `images`
              items:
                type: object
                properties:
                  with:
                    type: number
                  date:
                    type: string
                    format: date
                    example: '2022-02-02'
                  filename:
                    type: string
                    example: 'cover.jpg'
                  src:
                    type: string
                    example: 'user/2883f9fd-e902-4c7e-acbd-390144797d3b/listing/135808a8be4f51-eca8-4471-96df-450f41894749'
                  url:
                    type: string
                    description: Full url of image
                    example: 'https://cdn.example.com/user/2883f9fd-e902-4c7e-acbd-390144797d3b/listing/135808a8be4.jpg'
            calculatedListingSearchPageStatus:
              type: object
              deprecated: true
              description: |
                Reserved for internal use only

                Listing status in Search page
              properties:
                code:
                  type: string
                  description: code of status
                  enum:
                    - DRAFT
                    - UNLISTED
                    - PAUSED
                    - SNOOZED
                    - ALL_GOOD
                    - NEEDS_ATTENTION
                  example: 'ALL_GOOD'
                numberOfRemainingSteps:
                  type: number
                  description:
                    Number of remaining steps, existed with code = `DRAFT`
                  example: 9
                unpublishedBy:
                  type: string
                  description: User unpublish listing
                unpublishedDate:
                  type: string
                  format: date
                  description: Date unpublished, existed with code = `UNLISTED`
                  example: '2022-10-12'
                pausedAt:
                  type: string
                  format: date
                  description: paused At, existed with code = 'PAUSED'
                  example: '2022-10-11'
                pauseReason:
                  type: string
                  format: date
                  description: reason of paused, existed with code = 'PAUSED'

            calculatedListingSearchPageActionButtons:
              type: array
              deprecated: true
              description: |
                Reserved for internal use only
                Action Button for listing search page
              items:
                type: object
                properties:
                  type:
                    type: string
                    description: |
                      Type of action
                      - `CONTACT_SUPPORT`: Open modal contact support. 
                      - `FILL_MODEL_179`: Redirect to page builder booking-rules.
                      - `RENTAL_LICENSE`: Redirect to page builder basic-details.
                      - `BULGARIA_UIC`: Redirect to page builder basic-details.
                      - `CHECK_CHANNEL_CONNECTION`: Redirect to page channal-detail.
                      - `CALENDAR`: Redirect to page calender.
                      - `UPDATE_SEASONAL_RATE`: Redirect to page builder seasonal-rates.
                      - `UPDATE_RATE`: Redirect to page basic-rates.
                      - `SET_TIME`: Redirect to page builder instructions.
                      - `CONFIRM_RENTAL_LICENSE`: Redirect to page basic-details.
                      - `END_SNOOZE`: Open modal end-snooze.
                      - `COMPLETE`: Redirect to page builder with current builder step.
                      - `APPROVE`: Redirect to page builder resume.
                      - `PREVIEW`: Redirect to page page listing preview.
                      - `ACTIVATE`: Open modal publish listing.full.v1:
                      - `VIEW_OPPORTUNITIES`: Redirect to page insights opportunities.
                      - `PREVIEW_LISTING`: Redirect to property/{listingId}.
                    enum:
                      - CONTACT_SUPPORT
                      - FILL_MODEL_179
                      - RENTAL_LICENSE
                      - BULGARIA_UIC
                      - CHECK_CHANNEL_CONNECTION
                      - CALENDAR
                      - UPDATE_SEASONAL_RATE
                      - UPDATE_RATE
                      - SET_TIME
                      - CONFIRM_RENTAL_LICENSE
                      - END_SNOOZE
                      - COMPLETE
                      - APPROVE
                      - PREVIEW
                      - ACTIVATE
                      - VIEW_OPPORTUNITIES
                      - PREVIEW_LISTING
                  name:
                    type: string
                    description: name of action
            calculatedListingSearchPageMenuOptions:
              type: array
              deprecated: true
              description: |
                Reserved for internal use only
                Menu options for listing search page
              items:
                type: object
                properties:
                  text:
                    type: string
                    description: name of menu options
                    example: Update rates
                  code:
                    type: string
                    description: |
                      Code of menu options:
                      - `UPDATE_RATE`: Redirect to page basic-rates.
                      - `GUESTS_BOOK`: Redirect to page channal-manager and open modal ChooseHowGuestBook.
                      - `CHANNAL_MANAGER`: Redirect to page channal-manager/{listingId}.
                      - `BOOKING_LIST`: Redirect to page booking listing.
                      - `PREVIEW`: Open new tab listing preview.
                      - `CHANGE_LISTING_STATUS`: Open modal change listing statuses.
                      - `MOVE_TO_ANOTHER_ACCOUNT`: Open modal move listing to another account.
                      - `DELETE_LISTING`: Open modal deactivate.
                      - `END_SNOOZE`: Open modal end-snooze.
                      - `PUBLISH_LISTING`: Open modal publish listing.
                    enum:
                      - UPDATE_RATE
                      - GUESTS_BOOK
                      - CHANNAL_MANAGER
                      - BOOKING_LIST
                      - PREVIEW
                      - CHANGE_LISTING_STATUS
                      - MOVE_TO_ANOTHER_ACCOUNT
                      - DELETE_LISTING
                      - END_SNOOZE
                      - PUBLISH_LISTING
                    example: UPDATE_RATE
            calculatedIsSnoozed:
              type: boolean
              description:
                Only visible if `checkForSnooze = true`. Whether listing is
                snoozed
            calculatedSnoozeListingId:
              type: string
              description:
                Only visible if `checkForSnooze = true`. If snoozed, this is the
                snooze booking ID
            calculatedSnoozedFrom:
              type: string
              format: date
              description:
                Only visible if `checkForSnooze = true`. If snoozed, this is the
                date listing started snoozing
            calculatedSnoozedTo:
              type: string
              format: date
              description:
                Only visible if `checkForSnooze = true`. If snoozed, this is the
                date listing ended snoozing
            calculatedBuilderStep:
              type: string
              deprecated: true
              description: Precomputed builder step
              enum:
                - location
                - map
                - basic-details
                - rooms
                - photos
                - description
                - facilities
                - basic-rates
                - seasonal-rates
                - discounts
                - extras
                - booking-rules
                - house-rules
                - instructions
                - select-sales-channels
                - calendar
              example: basic-rates
            calculatedCanBePublished:
              type: boolean
              description: Precomputed listing can be published
              example: true
    sales-partner.full.v1:
      allOf:
        - type: object
          description: |
            A sales partner.
          properties:
            id:
              type: string
              description: The sales partner ID
              readOnly: true
              example: AIRB
            name:
              type: string
              description: The sales partner name
              readOnly: true
              example: Airbnb
            brands:
              type: array
              description: |
                The list of brands that the sales partner has. The first brand is the default brand to display on channel manager.
              minItems: 1
              items:
                type: object
                properties:
                  id:
                    type: string
                    description: The brand ID
                    readOnly: true
                    example: ABNB
                  name:
                    type: string
                    description: The brand name
                    readOnly: true
                    example: Airbnb
                  logoUrl:
                    type: string
                    description: The url for brand's logo
                    example: https://your.rentals/AIRB.jpg
                  logo:
                    type: string
                    description: The brand logo ID
                    readOnly: true
                    example: ABNB
                  url:
                    type: string
                    description: The brand URL
                    readOnly: true
                    example: 'https://www.airbnb.com'
            logoUrl:
              type: string
              description: The url for brand's logo
              example: https://your.rentals/AIRB.jpg
            status:
              type: string
              description: |
                Sales channel status

                | Status | Description | Should be shown in channel manager | Can receive bookings |
                | --- | --- | --- | --- |
                | live | Channel is live, and should be shown in channel manager | Yes | Yes |
                | comingSoon | Channel that we are under a contract with, but not yet live | Yes | Yes |
                | hidden | Channel is live, but should not be shown in channel manager | No | Yes |
                | notContracted | Channel is under development or we haven't signed a contract with them yet | No | Yes |
                | disabled | Channel that we are no longer under a contract with | No | No |

                Exceptions:

                * `PMDR` should be treated as `live` even though it is currently set as `hidden`
                * Partners with `type=CM` does not have `status` should not be shown in channel manager.
              example: live
              enum:
                - live
                - comingSoon
                - hidden
                - notContracted
                - disabled
              readOnly: true
            type:
              type: string
              description: |
                Sales partner type
                * `SC`: Sales Channel * `CM`: Channel Manager
              enum:
                - SC
                - CM
              example: SC
              readOnly: true
            merchant:
              type: boolean
              description: |
                Whether the sales partner is Merchant of Record (collects payment from guest)
              example: true
              readOnly: true
            priority:
              type: number
              format: integer
              description: |
                The priority of the sales partner to be displayed in the channel manager.  The higher the number, the higher the priority.
              example: 100
    organization.full.v1:
      allOf:
        - type: object
          description: |
            An organization.
          properties:
            id:
              type: string
              description: The organization ID
              example: 669ac612-2b8e-4a95-90e1-fc73c4ea4f4e
              readOnly: true
            createdAt:
              type: string
              format: date-time
              description: The date and time the listing was created
              example: '2020-01-01T00:00:00.000Z'
              readOnly: true
            updatedAt:
              type: string
              format: date-time
              description: The date and time the listing was created
              example: '2020-01-01T00:00:00.000Z'
              readOnly: true
            name:
              type: string
              description: The organization name
              example: My Organization
            type:
              type: string
              description: The organization type
              enum:
                - private
                - company
              example: private
            status:
              type: string
              description: The organization status
              enum:
                - active
                - inactive
              example: active
            enableFeatureFlag:
              type: boolean
              description:
                Whether the organization have feature flagging feature enabled
              example: true
            inactiveReason:
              type: string
              description: The reason why the organization is deactivated
              example: Inactive reason
            inactiveBy:
              type: string
              description: ID of user who deativated the organization
              example: 669ac612-2b8e-4a95-90e1-fc73c4ea4f4e
    account.full.v1:
      allOf:
        - type: object
          description: |
            An account.
          required:
            - id
            - email
            - createdAt
            - updatedAt
            - organizationId
            - accountType
            - ratesBasis
            - currency
            - setting
          properties:
            id:
              type: string
              description: The Account ID
              example: ABCDEF
              readOnly: true
            email:
              type: string
              description: The account's email address
              example: account@example.com
            createdAt:
              type: string
              format: date-time
              description: The date and time the account was created
              example: '2020-01-01T00:00:00.000Z'
              readOnly: true
            updatedAt:
              type: string
              format: date-time
              description: The date and time the account was created
              example: '2020-01-01T00:00:00.000Z'
              readOnly: true
            organizationId:
              type: string
              description: The ID of organization that accounts belong to
              example: 669ac612-2b8e-4a95-90e1-fc73c4ea4f4e
              readOnly: true
            accountType:
              type: string
              description: The account type
              enum:
                - private
                - company
              example: private
            referenceName:
              type: string
              nullable: true
              description:
                'The account name to use in the account switcher. If not
                provided, use the `companyName` attribute.'
              example: Cyprus Villa
            companyName:
              type: string
              nullable: true
              description:
                'The company name (Account Name), in case `accountType` is
                `company`'
              example: My Company
            color:
              type: string
              nullable: true
              description:
                The account color to be shown in account switcher. Must be a
                valid hex color.
              example: '#000000'
            profilePicture:
              type: string
              description: |
                The URL of the profile picture. If not a fully formed URL, it should be prefixed. Contact us for more information.
              example: 'https://example.com/profile-picture.png'
            abTesting:
              type: string
              nullable: true
              description:
                'The AB testing configuration. Is a comma (`,`) separated string'
              example: multiAccount - null
            ratesBasis:
              type: string
              description: |
                How PM will input the rates for the listing.
                | Value | Description | | --- | --- | | rental | PM input Gross amount (what guest pays) | | payout | PM input Net amount (what PM receives, after Your.Rentals fees) |
              enum:
                - rental
                - payout
              example: rental
            currency:
              type: string
              description:
                "The currency for all listings in the account, and the currency
                property manager will receive payouts in. If the property
                manager changes the account's currency, all listings currency
                will be changed"
              example: USD
            setting:
              type: array
              description: The account's notification settings
              items:
                type: object
                properties:
                  name:
                    type: string
                    description: |
                      The notification config name
                      | Name | Description | Can be turn off | | --- | --- | --- | | notification_newsletter | Your.Rentals Newsletter | Yes | | notification_blog_update | Your.Rentals Blog update | Yes  | | notification_new_feature | Your.Rentals New feature and channel announcements | Yes | | notification_special_offers | Your.Rentals Special offers, promotions, and surveys | Yes | | notification_booking | New Booking Notification, Request bookings, or cancellation | No | | notification_payout | Payout notifications | No | | notification_guest | Guest request notifications | No | | notification_guest_review | Guest review notifications | No | | notification_listing_update | Listing status changes, or if it's missing any info | No| | notification_calendar_update | Notification if calendar hasn't been updated in a while | No | | notification_collaborator | Notification when a collaborator adds or remove a booking | No |
                    enum:
                      - notification_newsletter
                      - notification_blog_update
                      - notification_new_feature
                      - notification_special_offers
                      - notification_booking
                      - notification_payout
                      - notification_guest
                      - notification_guest_review
                      - notification_listing_update
                      - notification_calendar_update
                      - notification_collaborator
                    example: notification_blog_update
                  value:
                    type: array
                    description: The notification channel
                    items:
                      type: string
                      description: The notification channel
                      enum:
                        - email
                        - sms
    channel-setting-form-value.v1:
      type: object
      properties:
        contentDefinitionId:
          type: string
          description: Id of channel content definition table
          format: uuid
        isEnabled:
          type: boolean
          description:
            'Value for yes/no question. If true, form value is accepted'
        formValue:
          type: object
          format: 'Record<mappingKey, any>'
          description: 'Record<gatewayMappingKey, any>'
          nullable: true
        order:
          type: number
          description: 'When multiple is true, this field support UI order'
          default: 1
          minimum: 1
      required:
        - contentDefinitionId
        - isEnabled
        - order
      x-examples:
        Example:
          contentDefinitionId: ff7bf553-e2e4-4dfd-b9f0-e188d4620a10
          isEnabled: true
          formValue:
            PARKING_NAME: Parking 1
            PARKING_TYPE: INDOOR_PARKING
            PAID_PARKING: 'YES'
            PARKING_RATE:
              CURRENCY: SEK
              AMOUNT: 300
              TYPE: PER_DAY
            VALET_SERVICE_AVAILABLE: 'YES'
          order: 1
    local-authority-connection-configuration.spanish.v1:
      title: local-authority-connection-configuration.spanish.v1
      x-stoplight:
        id: 88wlims4oikk3
      type: object
      description: Local authority connection configuration - Spanish specific
      properties:
        username:
          type: string
          description: Username to authenticate the connection
        password:
          type: string
          description: Password to authenticate the connection
        landlordCode:
          type: string
          description:
            A specific authentication code provided by connection registration
        establishmentCode:
          type: string
          description: |-
            An establishment is 1-1 relationship to our listing item.
            - Individual: has only 1 listing, so the establishmentCode is fixed
            - Professional: has more than 1 listing, each listing has 1 corresponding establishmentCode
      required:
        - username
        - password
        - landlordCode
    local-authority-connection.entity.v1:
      title: local-authority-connection.entity.v1
      x-stoplight:
        id: df887141de888
      type: object
      properties:
        id:
          type: string
          description: ID of this entity
          format: uuid
          readOnly: true
        name:
          type: string
          description: Connection name
        type:
          type: string
          enum:
            - SPANISH_POLICE
          description: Connection type
          readOnly: true
        configuration:
          oneOf:
            - $ref: '#/components/schemas/local-authority-connection.configuration.spanish.v1'
        accountId:
          type: string
          description: Account ID who own this connection integration
          readOnly: true
        isEnabled:
          type: boolean
          description: Connection enabled
        createdAt:
          type: string
          description: DB timestamp when the connection is created
          format: date-time
        updatedAt:
          type: string
          description: DB timestamp when the connection is modified
          format: date-time
      required:
        - id
        - name
        - type
        - configuration
        - accountId
        - isEnabled
        - createdAt
        - updatedAt
    create-local-authority-connection.dto.v1:
      title: create-local-authority-connection.dto.v1
      type: object
      x-stoplight:
        id: 3c90d3ebacf17
      properties:
        name:
          type: string
          description: Connection name
        type:
          type: string
          enum:
            - SPANISH_POLICE
          description: Connection type
        configuration:
          oneOf:
            - $ref: '#/components/schemas/local-authority-connection.configuration.spanish.v1'
      required:
        - name
        - type
        - configuration
    update-local-authority-connection.dto.v1:
      title: update-local-authority-connection.dto.v1
      x-stoplight:
        id: i0u07ki9q5hff
      type: object
      properties:
        name:
          type: string
          description: Connection name
        configuration:
          oneOf:
            - $ref: '#/components/schemas/local-authority-connection-configuration.spanish.v1'
    local-authority-connection-association-config.spanish.v1:
      title: local-authority-connection-association-config.spanish.v1
      x-stoplight:
        id: kh7k49xgeexqs
      type: object
      properties:
        establishmentCode:
          type: string
          description:
            Establishment code if already assigned by local authority side
    conversation-message.v1:
      title: Conversation Message
      type: object
      properties:
        id:
          type: string
          description: Message ID
          readOnly: true
          format: uuid
        type:
          type: string
          description: Message type. Should always be `conversation`
          enum:
            - conversation
        resourceType:
          type: string
          description: Resource type. Should always be `conversation`
          enum:
            - conversation
        resourceId:
          type: string
          description: Conversation ID
          format: uuid
        timestamp:
          type: string
          description: Timestamp of the message
          format: unix-timestamp
        actorType:
          type: string
          description: Actor type
          enum:
            - guest
            - pm
            - system
            - sales-channel
            - admin
            - collaborator
        actorId:
          type: string
          description: |
            Actor ID
        data:
          type: object
          properties:
            text:
              type: string
              description: Text content of the message
            attachFile:
              type: array
              description: List of attached files
              items:
                type: object
                properties:
                  id:
                    type: string
                  name:
                    type: string
                    description: File name
                  filePath:
                    type: string
                    description: File path
            inquiry:
              $ref: '#/components/schemas/conversation-inquiry.v1'
    conversation-inquiry.v1:
      title: Conversation Inquiry Fragment
      type: object
      properties:
        guestFirstname:
          type: string
          description: Guest First Name
        guestLastname:
          type: string
          description: Guest Last Name
        guestEmail:
          type: string
          description: Guest Email
        from:
          type: string
          description: Check in date
          format: date
        to:
          type: string
          description: Check out date
          format: date
        salesChannelId:
          type: string
          description: Sales Channel making the Inquiry
        adults:
          type: number
          description: Number of adults
          minimum: 1
          exclusiveMinimum: false
        children:
          type: number
          description: Number of children
          minimum: 0
          exclusiveMinimum: false
    message-template.v1.partial:
      title: Message Template - Create or Update
      type: object
      required:
        - id
        - title
      properties:
        title:
          type: string
          description: Template title (only visible internally)
        content:
          type: string
          description: Template content
    message-template.v1:
      allOf:
        - $ref: '#/components/schemas/message-template.v1.partial'
        - title: Message Template
          type: object
          required:
            - id
            - title
          properties:
            id:
              type: string
              format: uuid
              readOnly: true
              description: Template ID
            status:
              type: string
              enum:
                - active
                - deleted
              description: Template status
            createdAt:
              type: string
              format: date-time
              description: DB timestamp when the template is created
            updatedAt:
              type: string
              format: date-time
              description: DB timestamp when the template is modified
    conversation.v1:
      title: Conversation
      type: object
      required:
        - id
      properties:
        id:
          type: string
          description: Conversation ID
          readOnly: true
          format: uuid
        accountId:
          type: string
          description: Account ID
          format: uuid
        state:
          type: string
          description: State of conversation
          enum:
            - read
            - unread
            - archived
        createdAt:
          type: string
          description: DB timestamp when the conversation is created
          format: date-time
        updatedAt:
          type: string
          description: DB timestamp when the conversation is modified
          format: date-time
        lastActivityAt:
          type: string
          description: DB timestamp when the conversation is last updated
          format: date-time
        lastMessage:
          $ref: '#/components/schemas/conversation-message.v1'
        checkInAt:
          type: string
          description: DB timestamp when the guest check in
          format: date-time
        offerId:
          type: string
          description: Offer ID. Only present if the conversation have an offer
          format: uuid
        offer:
          type: object
          description:
            The offer data. Only present if the conversation have an offer
          properties:
            id:
              type: string
              description: Offer ID
            listingId:
              type: number
              description: Listing ID
            from:
              type: string
              format: date
              description: Check-In Date
            to:
              type: string
              format: date
              description: Check-Out Date
            status:
              type: string
              description: Booking status
            cancellationPolicy:
              type: array
              description:
                'The cancellation policy. If there are multiple, the first one
                is used.'
              items:
                type: string
            salesChannel:
              type: string
              description: The Sales Channel ID
              example: PMDR
            guest:
              type: object
              description: Guest Information
              properties:
                firstName:
                  type: string
                  description: Guest first name
                lastName:
                  type: string
                  description: Guest last name
                email:
                  type: string
                  description: Guest email
                phone:
                  type: string
                  description: Guest phone number
                  example: '+84123456789'
                address:
                  type: string
                  description: Guest address
                city:
                  type: string
                  description: Guest city
                postalCode:
                  type: string
                  description: Guest postal code
        inquiryId:
          type: string
          description:
            Inquiry ID. Only present if the conversation have an inquiry
          format: uuid
        inquiry:
          $ref: '#/components/schemas/conversation-inquiry.v1'
        occasion:
          type: string
          description: Occasion of the inquiry
        company:
          type: string
          description: Company of the guest making inquiry
        listingId:
          type: number
          description:
            Listing ID. Should only present if the conversation starts with an
            inquiry
        bookingId:
          type: string
          description:
            Booking ID. Only present if the conversation have a booking
          format: uuid
        booking:
          type: object
          description:
            The booking data. Only present if the conversation have a booking
          properties:
            id:
              type: string
              description: Booking ID
            listingId:
              type: number
              description: Listing ID
            from:
              type: string
              format: date
              description: Check-In Date
            to:
              type: string
              format: date
              description: Check-Out Date
            status:
              type: string
              description: Booking status
            cancellationPolicy:
              type: array
              description:
                'The cancellation policy. If there are multiple, the first one
                is used.'
              items:
                type: string
            salesChannel:
              type: string
              description: The Sales Channel ID
              example: PMDR
            guest:
              type: object
              description: Guest Information
              properties:
                firstName:
                  type: string
                  description: Guest first name
                lastName:
                  type: string
                  description: Guest last name
                email:
                  type: string
                  description: Guest email
                phone:
                  type: string
                  description: Guest phone number
                  example: '+84123456789'
                address:
                  type: string
                  description: Guest address
                city:
                  type: string
                  description: Guest city
                postalCode:
                  type: string
                  description: Guest postal code
        rebookingConversationRef:
          type: string
          description:
            'When a "rebook" booking is created, the original booking
            conversation will be updated with this value set to the new
            conversation ID'
        guestName:
          type: string
          description: Guest name in `firstName lastName` format
        phone:
          type: object
          description: |
            Phone number

            Note: This field is present in API, but we're not sure if there are any actual data in production
          properties:
            code:
              type: number
            number:
              type: string
            country:
              type: string
    offer.full.v1:
      title: Offer
      allOf:
        - $ref: '#/components/schemas/offer.partial.v1'
        - type: object
          properties:
            id:
              type: string
              description: Offer ID
              format: uuid
            accountId:
              type: string
              description: Account ID
              format: uuid
            listingId:
              type: number
              description: Listing ID
            createdAt:
              type: string
              description: DB timestamp when the offer is created
              format: date-time
            updatedAt:
              type: string
              description: DB timestamp when the offer is modified
              format: date-time
            salesChannelId:
              type: string
              description: The Sales Channel ID
              example: PMDR
    offer.partial.v1:
      title: Offer creation
      allOf:
        - $ref: '#/components/schemas/booking.partial.v1'
        - type: object
          required:
            - totalPrice
            - message
            - adults
            - guest
            - cancellationPolicyId
          properties:
            totalPrice:
              type: number
              description: The total amount of the offer
              example: 100
            message:
              type: string
              description: The message to send to guest
              maxLength: 1000
            adults:
              type: number
              description: The number of adults
              example: 2
              minimum: 1
            children:
              type: number
              description: The number of children
              example: 1
            infants:
              type: number
              description: The number of infants
              example: 1
            guest:
              type: object
              description: The guest information
              required:
                - firstName
                - lastName
                - email
              properties:
                firstName:
                  type: string
                  description: The first name of the guest
                  example: John
                lastName:
                  type: string
                  description: The last name of the guest
                  example: Doe
                email:
                  type: string
                  format: email
                  description: The email of the guest
                phone:
                  type: object
                  properties:
                    code:
                      type: number
                      description: The country code of the phone number
                    number:
                      type: string
                      description: The phone number
                    country:
                      type: string
                      description:
                        The country of the phone number. ISO 3166-1 alpha-2 code
                language:
                  type: string
                  description: The language of the guest.
                  example: EN
                  default: EN
                  enum:
                    - DE
                    - EN
                    - ES
                    - FR
                    - IT
            cancellationPolicyId:
              $ref: '#/components/schemas/cancellation-policy.v1'
            blockedUntilDate:
              type: string
              format: date
              description: |
                If not specified, the offer will __not__ block calendar for the duration of the offer.

                If specified, the offer will block calendar until the specified date, after which the calendar will be unblocked and available for other bookings.

                The date must not be in the past (current date is OK), and must be no later than the check-in date.
            expiredDate:
              type: string
              format: date
              description: |
                If not specified, the offer will __not__ expires.

                If specified, the offer will expires on the specified date, after which the offer will be automatically declined.

                The date must not be in the past (current date is OK), and must be no later than the check-in date.
    local-authority-connection.configuration.spanish.v1:
      title: local-authority-connection.configuration.spanish.v1
      x-stoplight:
        id: 7oo0rad98hte7
      type: object
      description:
        Local authority connection configuration for Spanish Police integration
      properties:
        username:
          type: string
          description: Username to authenticate the connection
        password:
          type: string
          description: Password to authenticate the connection
        landlordCode:
          type: string
          description: A specific code for data manipulation
        establishmentCode:
          type: string
          description: A specific code for data manipulation
      x-examples:
        Example 1:
          username: '559212'
          password: Temporal1
          landlordCode: '0000000160'
          establishmentCode: '0000000229'
    extra-service-definition.v1:
      title: Extra Service Definition
      type: object
      properties:
        id:
          type: string
          description: The id of extra service definition.
          example: extraDefinitionId
        accountId:
          type: string
          description: The account id that extra definition belongs to.
          example: accountId
        createdAt:
          type: string
          description: When was the extra created
          example: '2023-03-30T02:50:03.000Z'
          format: date-time
        updatedAt:
          type: string
          description: When was the extra updated
          example: '2023-03-30T02:50:03.000Z'
          format: date-time
        currency:
          type: string
          description: The currency of extra service definition.
          example: EUR
        unitPrice:
          type: number
          description: The unit price of extra service definition
          example: 69
        earliestOrderRule:
          type: string
          description: The earliest time when extra definition can be ordered
          example: AT_THE_TIME_BOOKING
          enum:
            - AT_THE_TIME_BOOKING
            - 48H_BEFORE_CHECK_IN
            - 24H_BEFORE_CHECK_IN
            - 48H_BEFORE_CHECK_OUt
            - 24H_BEFORE_CHECK_OUt
        latestOrderRule:
          type: string
          description: The latest time when extra definition can be ordered
          example: NO_RESTRICTION
          enum:
            - 48H_BEFORE_CHECK_IN
            - 24H_BEFORE_CHECK_IN
            - 48H_BEFORE_CHECK_OUt
            - 24H_BEFORE_CHECK_OUt
            - NO_RESTRICTION
        cancellationOrderRule:
          type: string
          description:
            The time rule when extra definition order can be cancelled
          example: NONE_REFUNDABLE
          enum:
            - NONE_REFUNDABLE
            - ONE_DAY_BEFORE_CHECKIN
            - ANY_TIME_BEFORE_CHECK_OUT
        iconUrl:
          type: string
          description: The icon of extra definition
          example: lnr-star
        feeBasis:
          type: string
          description: The fee basis of extra definition
          example: PER_UNIT
          enum:
            - FREE
            - PER_UNIT
            - PER_UNIT_PER_DAY
            - PER_DAY
            - PER_PERSON_PER_WEEK
            - PER_PERSON_PER_DAY
            - PER_WEEK
            - PER_PERSON
        descriptions:
          description: The list of translated descriptions of extra definition
          example:
            - name: Free Coke
              languageCode: EN
              description: Descriptions
            - name: Free Coke ES
              languageCode: ES
              description: Descriptions
          type: array
          items:
            $ref: '#/components/schemas/extra-service-description.v1'
        additionalDetails:
          type: array
          description:
            The list of translated additional details of extra definition
          example:
            - content: Additional details
              languageCode: EN
            - content: Additional details ES
              languageCode: ES
          items:
            $ref: '#/components/schemas/extra-service-additional-detail'
        listingAssociations:
          type: array
          description:
            The list of listing id that extra definition is associated to
          example:
            - listingId: 123
            - listingId: 456
          items: {}
    fee-basis.v1:
      title: Fee Basis
      type: object
      required:
        - id
        - perDay
        - perWeek
        - perPerson
        - perUnit
        - feeBasisTranslation
      properties:
        id:
          type: string
          example: PER_UNIT
        perDay:
          type: boolean
          description: Is the fee basis calculated by per day
          example: false
        perWeek:
          type: boolean
          description: Is the fee basis calculated by per week
          example: false
        perUnit:
          type: boolean
          description: Is the fee basis calculated by per unit
          example: true
        perPerson:
          type: boolean
          description: Is the fee basis calculated by per person
          example: false
        feeBasisTranslation:
          type: array
          description: The translation values of the fee basis
          example:
            - languageCode: EN
              name: Per unit
            - languageCode: ES
              name: Per unita
    quote-payload.v1:
      type: object
      required:
        - from
        - to
        - adults
      properties:
        from:
          type: string
          format: date
          description: The start date of the booking
          example: 2020-01-01
        to:
          type: string
          format: date
          description: The end date of the booking. Must be later than `from`
          example: 2020-01-02
        adults:
          type: number
          format: integer
          description: Number of adults
          minimum: 1
          exclusiveMinimum: false
        children:
          type: number
          format: integer
          description: Number of children
        infants:
          type: number
          format: integer
          description: Number of infants
        promo:
          type: string
          description: Promo code
    quote-breakdown-item-price.full.v1:
      allOf:
        - type: object
          required:
            - type
            - displayOrder
            - metadata
          properties:
            type:
              type: string
              description: |
                Type of the price breakdown item

                | Display Order | Type | Description |
                | - | - | - |
                | 1 | TOTAL_DAILY_RATE_V1 | Nightly rate total |
                | 2 | DISCOUNT | Discount amount |
                | 3 | BOOKING_BOOST_DISCOUNT | Booking boost discount |
                | 4 | CLEANING_FEE | Cleaning fee |
                | 5 | EXTRA_V1 | Extra V1 orders (per item) |
                | 6 | EXTRA_V2 | Extra V2 orders (per order) |
                | 7 | BOOKING_BOOST_FEE_CREDIT_ADJUSTMENT | Booking boost fee credit adjustment |
                | 8 | MANUAL_ADJUSTMENT | Adjustment |
              enum:
                - TOTAL_DAILY_RATE_V1
                - DISCOUNT
                - BOOKING_BOOST_DISCOUNT
                - CLEANING_FEE
                - BOOKING_BOOST_FEE_CREDIT_ADJUSTMENT
                - EXTRA_V1
                - EXTRA_V2
                - MANUAL_ADJUSTMENT
            displayOrder:
              type: integer
              description:
                Display order of the price breakdown item (refer to type)
            metadata:
              type: object
              additionalProperties:
                type: string
        - $ref: '#/components/schemas/quote-breakdown-item-price.v1'
    quote-breakdown-item-price.v1:
      type: object
      required:
        - baseCurrency
        - pmCurrency
        - guestCurrency
        - baseToPmExchangeRate
        - baseToGuestExchangeRate
        - exchangeRateDate
        - guestPaymentInBaseCurrency
        - guestPaymentInPmCurrency
        - guestPaymentInGuestCurrency
        - serviceFeeInBaseCurrency
        - serviceFeeInPmCurrency
        - serviceFeeInGuestCurrency
        - channelFeeInBaseCurrency
        - channelFeeInPmCurrency
        - channelFeeInGuestCurrency
        - adjustmentInBaseCurrency
        - adjustmentInPmCurrency
        - adjustmentInGuestCurrency
        - pmPayoutInBaseCurrency
        - pmPayoutInPmCurrency
        - pmPayoutInGuestCurrency
      properties:
        baseCurrency:
          type: string
          description: Base currency
          example: EUR
          default: EUR
        pmCurrency:
          type: string
          description: Property Manager currency
          example: EUR
        guestCurrency:
          type: string
          description: Guest currency
          example: EUR
        baseToPmExchangeRate:
          type: number
          format: float
          description: Exchange rate from base to property manager currency
          example: 1.0
        baseToGuestExchangeRate:
          type: number
          format: float
          description: Exchange rate from base to guest currency
          example: 1.0
        exchangeRateDate:
          type: string
          format: date
          description: Date for this exchange rate
        guestPaymentInBaseCurrency:
          type: number
          format: float
          description: Guest payment in Base currency
          example: 100
        guestPaymentInPmCurrency:
          type: number
          format: float
          description: Guest payment in Pm currency
          example: 100
        guestPaymentInGuestCurrency:
          type: number
          format: float
          description: Guest payment in Guest currency
          example: 100
        serviceFeeInBaseCurrency:
          type: number
          format: float
          description: Service fee in Base currency
          example: 5
        serviceFeeInPmCurrency:
          type: number
          format: float
          description: Service fee in Pm currency
          example: 5
        serviceFeeInGuestCurrency:
          type: number
          format: float
          description: Service fee in Guest currency
          example: 5
        channelFeeInBaseCurrency:
          type: number
          format: float
          description: Channel fee in Base currency
          example: 15
        channelFeeInPmCurrency:
          type: number
          format: float
          description: Channel fee in Pm currency
          example: 15
        channelFeeInGuestCurrency:
          type: number
          format: float
          description: Channel fee in Guest currency
          example: 15
        adjustmentInBaseCurrency:
          type: number
          format: float
          description: Adjustment in Base currency
          example: 0
        adjustmentInPmCurrency:
          type: number
          format: float
          description: Adjustment in Pm currency
          example: 0
        adjustmentInGuestCurrency:
          type: number
          format: float
          description: Adjustment in Guest currency
          example: 0
        pmPayoutInBaseCurrency:
          type: number
          format: float
          description: Property manager payout in Base currency
          example: 80
        pmPayoutInPmCurrency:
          type: number
          format: float
          description: Property manager payout in Pm currency
          example: 80
        pmPayoutInGuestCurrency:
          type: number
          format: float
          description: Property manager payout in Guest currency
          example: 80
    cancellation-policy.v1:
      type: string
      description: |
        The ID of the cancellation policy

        | ID | Description |
        | --- | ----------- |
        | Free7 | 100% refund up to 7 days prior to check-in |
        | Free14 | 100% refund up to 14 days prior to check-in |
        | Free30 | 100% refund up to 30 days prior to check-in |
        | SuperFlexible | 50% refund prior to check-in, except fees |
        | Flexible | 50% refund up to 7 days prior to check-in, except fees |
        | Moderate | 50% refund up to 14 days prior to check-in, except fees |
        | Strict | 50% refund up to 30 days prior to check-in, except fees |
        | NonRefundable | No refund prior to check-in |
      enum:
        - Free7
        - Free14
        - Free30
        - SuperFlexible
        - Flexible
        - Moderate
        - Strict
        - NonRefundable
    extra-service-description.v1:
      title: extra-service-description.v1
      x-stoplight:
        id: 2e5sj8ptbu7yw
      type: object
      properties:
        name:
          type: string
          description: Localized Extra name
          example: Example Extra Name EN
        languageCode:
          type: string
          description: Language code
          example: EN
        description:
          type: string
          description: Localized description
          example: Example Extra Description EN
      required:
        - name
        - languageCode
        - description
    extra-service-additional-detail:
      title: extra-service-additional-detail
      x-stoplight:
        id: 5yt85ts5153h0
      type: object
      properties:
        content:
          type: string
          description: Additional detail content
          example: Example Additional Detail EN
        languageCode:
          type: string
          example: EN
          description: Language Code
      required:
        - content
        - languageCode
    category.v1:
      title: Category
      properties:
        key:
          type: string
          description: Category key for gateway mapping
        labelTranslationKey:
          type: string
          description: For i18n translation
        saleChannelId:
          type: string
          minLength: 4
          maxLength: 4
          example: BOCM
        parentKey:
          type: string
          description:
            Root category has parent key is null. Sub-section has parent key is
            not null
          nullable: true
        order:
          type: number
          description: UI display order
          minimum: 1
        summaryTranslationKey:
          type: string
          description: Summary information in the overview page
          nullable: true
        descriptionTranslationKey:
          type: string
          description: Description information in the setting page
          nullable: true
        showSearchBar:
          type: boolean
          description: Search bar is hidden when this field is false or null
          nullable: true
        searchBarPlaceholderTranslationKey:
          type: string
          description:
            I18n placeholder key for search input. Valid when showSearchBar is
            true
          nullable: true
        showAdditionalInformation:
          type: boolean
          description:
            Additional information for each section. Display in the in the blue
            information icon
          nullable: true
        additionalInformationLabelTranslationKey:
          type: string
          description:
            For i18n translation. Valid when showAdditionalInformation is true
          nullable: true
        additionalInformationDescriptionTranslationKey:
          type: string
          description:
            For i18n translation. Valid when showAdditionalInformation is true
          nullable: true
        showCaption:
          type: boolean
          description:
            Show caption for a section before display group definition items
          nullable: true
        captionLabelTranslationKey:
          type: string
          description: For i18n translation. Valid when showCaption is true
          nullable: true
        showSummarySidebar:
          type: boolean
          description: The sidebar on the right hand side
          nullable: true
        summarySidebarTranslationKey:
          type: string
          description:
            I18n sidebar translation key. Valid when showSummarySidebar is true
          nullable: true
        summarySidebarDescriptionTranslationKey:
          type: string
          description:
            I18n sidebar description translation key. Valid when
            showSummarySidebar is true
          nullable: true
      required:
        - key
        - labelTranslationKey
        - saleChannelId
        - parentKey
        - order
    push_notification_channel.v1.partial:
      type: object
      required:
        - deviceRegistrationToken
        - userId
      properties:
        deviceRegistrationToken:
          type: string
          description: Firebase device registration token
    push_notification_channel.v1.full:
      type: object
      allOf:
        - $ref: '#/components/schemas/push_notification_channel.v1.partial'
        - type: object
          required:
            - expiresAt
            - pushNotificationProvider
            - status
          properties:
            userId:
              type: string
              description: User ID
              format: uuid
            pushNotificationProvider:
              type: string
              description: Push notification provider.
              enum:
                - FCM
              default: FCM
              readOnly: true
            expiresAt:
              type: string
              description:
                Expiration date of the device registration token. This is
                current date + 30 days.
              format: date-time
              readOnly: true
            status:
              type: string
              description: Status of the device registration token.
              enum:
                - ACTIVE
                - INACTIVE
              readOnly: true

  responses:
    401.error.v1:
      description: Access token is invalid or expired
      content:
        application/json:
          schema:
            type: object
            properties:
              statusCode:
                type: integer
                description: The HTTP status code
                example: 401
              message:
                type: string
                description: The error message
                example: Access token is invalid or expired
    403.error.v1:
      description: User is forbidden to access this resource
      content:
        application/json:
          schema:
            type: object
            properties:
              statusCode:
                type: integer
                description: The HTTP status code
                example: 403
              message:
                type: string
                description: The error message
                example: User is forbidden to access this resource
  parameters:
    account-id.v1:
      name: accountId
      in: path
      description: The Account ID
      required: true
      schema:
        type: string
        example: fc73c4ea4f4e
    pagination.cursor.v1:
      name: _cursor
      in: query
      description:
        'The cursor to use to get the next page. If omitted, the first page will
        be returned.'
      required: false
      schema:
        type: string
        nullable: true
        example: abcdef
    pagination.limit.v1:
      name: _limit
      in: query
      description:
        'The number of items to return per page. If omitted, the default limit
        will be used.'
      required: false
      schema:
        type: integer
        example: 50
    pagination.sort.v1:
      name: _sort
      in: query
      description:
        'The field to sort by. If omitted, the default sort will be used.'
      required: false
      schema:
        type: string
        example: 'name:asc'
    booking-id.v1:
      name: bookingId
      in: path
      description: The Booking ID
      required: true
      schema:
        type: string
        example: ABCDEF
    offer-id.v1:
      name: offerId
      in: path
      description: The Offer ID (Booking ID)
      required: true
      schema:
        type: string
        example: ABCDEF
    snooze-id.v1:
      name: snoozeId
      in: path
      description: The Snooze ID (Booking ID)
      required: true
      schema:
        type: string
        example: ABCDEF
    rate-plan-id.v1:
      name: ratePlanId
      in: path
      description: The Listing's Rate Plan ID
      required: true
      schema:
        type: string
        format: uuid
        example: 123e4567-e89b-12d3-a456-426614174000
    listing-id.v1:
      name: listingId
      in: path
      description: The Listing ID
      required: true
      schema:
        type: number
        example: 12345
    organization-id.v1:
      name: organizationId
      in: path
      description: The Organization ID
      required: true
      schema:
        type: string
        example: fc73c4ea4f4e
    sale-channel-id.v1:
      name: saleChannelId
      in: path
      description: The sale channel ID
      required: true
      schema:
        type: string
        example: BOCM
    listing-id-query.v1:
      name: listingId
      in: query
      description: The listing ID in the query params
      schema:
        type: number
        example: 12345
x-tagGroups:
  - name: Authentication
    tags:
      - Authentication
  - name: Property Management
    tags:
      - Listing
      - Listing Snooze
      - Move Listing
      - Booking
      - Booking Request
      - Manual Booking
      - Offer
  - name: Channel Management
    tags:
      - Sales Partner
      - Sales Partner Terms
      - Listing Channel Content
  - name: Organization Management
    tags:
      - Organization
      - Account
      - User
  - name: Guest Registration Management
    tags:
      - Local Authority Connection
      - Local Authority Connection Association
  - name: Extra Service Management
    tags:
      - Extra Service Definition
      - Extra Service Order
  - name: Guest Messaging
    tags:
      - Conversation
      - Conversation Message
      - Message Template
      - Inquiry
  - name: Push Notification Channel
    tags:
      - Device Registration
      - Publish Push Notification Channel
  - name: Quote
    tags:
      - Booking Quote
      - Offer Quote
